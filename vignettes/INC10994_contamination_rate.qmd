---
title: "INC10994: Contamination Investigation"
author: "Joe Shaw (CS20980)"
toc: true
format:
  html:
    embed-resources: true
editor: visual
---

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(patchwork)
library(readxl)

source(here::here("scripts/connect_to_dna_db.R"))
source(here::here("functions/pansolid_cnv_excel_functions.R"))
source(here::here("functions/chromosome_arm_functions.R"))
source(here::here("functions/contamination_functions_INC10994.R"))

```

# Introduction

This is an investigation into the rate and source of contamination identified in PanSolid next generation sequencing at the North West Genomic Laboratory Hub (GLH).

# Methods

The number of ploidy regions for a sample can be used as marker for contamination.

```{r}
#| label: load-data
#| include: FALSE

number_ploidy_regions_live <- read_csv(paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "number_ploidy_regions_live.csv"),
                 col_types = "ccccd") |> 
  mutate(ws_number = as.numeric(str_extract(string = worksheet,
                                 pattern = "WS(\\d{6})",
                                 group = 1)),
         ws_fct = factor(worksheet, levels = unique(worksheet)),
         labno_suffix_worksheet = paste0(labno, "_", worksheet))

percent_138x_live <- read_csv(paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "percent_138x_live.csv"),
                 col_types = "ccccccccd") |> 
  mutate(panel = str_extract(string = filename,
                             pattern = "^Annotated_(.*)_WS\\d{6}.*.xlsx$",
                             group = 1))

stopifnot(anyNA(percent_138x_live$panel) == FALSE)

stdev_live <- read_csv(paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "stdev_live.csv"),
                 col_types = "ccccccccd")

```

Data from `r nrow(number_ploidy_regions_live)` samples from `r length(unique(number_ploidy_regions_live$worksheet))` worksheets (WS`r as.character(min(number_ploidy_regions_live$ws_number))` to WS`r as.character(max(number_ploidy_regions_live$ws_number))`) was collated and reviewed.

{{< pagebreak >}}

# Results

## Can we use number of ploidy regions to detect potential contamination?

```{r}
#| label: identify-potential-contamination-cases
#| include: FALSE

number_ploidy_regions_live_qc <- number_ploidy_regions_live |> 
  left_join(stdev_live |> 
              filter(!duplicated(labno_suffix_worksheet)) |> 
              select(labno_suffix_worksheet, stdev_noise),
            by = "labno_suffix_worksheet",
            relationship = "one-to-one") |> 
  left_join(percent_138x_live |> 
              filter(!duplicated(labno_suffix_worksheet)) |>
              select(labno_suffix_worksheet, percent_138x, panel),
            by = "labno_suffix_worksheet",
            relationship = "one-to-one")

potential_contamination_cases <- number_ploidy_regions_live_qc |> 
  filter(stdev_noise < 0.7 &
           percent_138x > 75 &
           number_ploidy_regions >= 150)

potential_contamination_labnos <- potential_contamination_cases$labno

potential_contamination_names <- sample_tbl |> 
  filter(labno %in% potential_contamination_labnos) |> 
  select(labno, firstname, surname) |> 
  collect()

write_csv(potential_contamination_cases |> 
            left_join(potential_contamination_names,
                      by = "labno",
                      # Some samples have been tested multiple times
                      relationship = "many-to-one") |> 
            arrange(worksheet) |> 
            select(labno_suffix_worksheet, worksheet, panel,
                   labno, firstname, surname,
                   number_ploidy_regions),
          paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "potential_contamination_cases.csv"))

```

```{r}
#| label: load-reviewed-data
#| include: FALSE

potential_contamination_cases_reviewed <- read_excel(
  paste0(config::get("data_folderpath"),
         "live_service/INC10994_contamination/",
         "potential_contamination_cases_reviewed.xlsx"),
  col_types = c("text", "text", "text", "text",
                "text", "text", "numeric", "text"))

```

I have manually reviewed 
`r nrow(potential_contamination_cases_reviewed)`
cases which had over 150 ploidy regions and also passed the percent coverage at 138X and signal-adjusted noise quality metrics.

```{r}
#| label: label-reviewed-data
#| include: FALSE

number_ploidy_regions_mod <- number_ploidy_regions_live_qc |> 
  left_join(potential_contamination_cases_reviewed |> 
               select(labno_suffix_worksheet, visual_inspection),
             by = "labno_suffix_worksheet") |> 
  mutate(category = case_when(
    visual_inspection == "potential contamination" ~"potential contamination",
    TRUE ~"no contamination"
  ),
  category = factor(category, levels = c("potential contamination",
                                         "no contamination")),
  visual_inspection = factor(visual_inspection,
                             levels = c("disordered genome",
                                        "potential contamination",
                                        "reference material",
                                        "bone marrow transplant")))

```

Cases which seem to be genuine contamination tend to have over 200 ploidy regions, whilst samples with disordered genomes (such as ovarian cancer samples) tend to have below 200.
Other possible causes of high ploidy region counts are reference materials with mixed DNA.
However, without confirmatory testing, the interpretation of contamination from VAF plots is subjective.

```{r}
#| label: fig-ploidy-regions-over-150
#| echo: FALSE

number_ploidy_regions_mod |> 
  filter(!is.na(visual_inspection)) |> 
  ggplot(aes(x = visual_inspection,
               y = number_ploidy_regions)) +
  geom_jitter(shape = 21, width = 0.1) +
  theme_bw() +
  theme(axis.text.x = element_text()) +
  labs(x = "", y = "Number of ploidy regions") +
  geom_hline(yintercept = 200, linetype = "dashed")

```

Despite this, a ploidy region count of 200 appears to be an adequate threshold for detecting potentially contaminated samples.

```{r}
#| label: tbl-visual-inspection-summary
#| echo: FALSE

tbl_visual_inspection_summary <- number_ploidy_regions_mod |> 
  filter(number_ploidy_regions >= 200 &
           stdev_noise < 0.7 &
           percent_138x >= 75) |> 
  group_by(visual_inspection) |> 
  summarise(n = n()) |> 
  arrange(desc(n)) |> 
  mutate(percent = round((n/sum(n))*100, 1))

knitr::kable(tbl_visual_inspection_summary)

```

## What is the rate of contaminated samples?

Overall the rate of contaminated samples is less than 1%, which is lower than the largest published study in the literature.

```{r}
#| label: tbl-contamination-rate
#| echo: FALSE

tbl_contamination_rate <- number_ploidy_regions_mod |> 
  group_by(category) |> 
  summarise(n = n()) |> 
  mutate(percent = round((n/sum(n))*100, 1)) |> 
  janitor::adorn_totals()

knitr::kable(tbl_contamination_rate)

```

{{< pagebreak >}}

## Do contaminated samples cluster on particular worksheets or batches?

```{r}
#| label: qiasymphony-run-details
#| include: FALSE

contamination_df <- number_ploidy_regions_mod |> 
  filter(category == "potential contamination")

contamination_labnos <- unique(contamination_df$labno)

qs_extraction_df <- extraction_batch_tbl |> 
  filter(extraction_method_fk == 33 &
           run_date > "2025-04-21 00:00:00") |> 
  collect()

qs_batches <- unique(qs_extraction_df$extraction_batch_id)

contaminated_extraction_df <- extraction_tbl |> 
  filter(lab_no %in% contamination_labnos &
           extraction_batch_fk %in% qs_batches) |> 
  collect() |> 
  rename(labno = lab_no) |> 
  mutate(sort_order_fct = factor(sort_order, levels = seq(1, 24, by = 1)))

contaminated_samples_per_batch <- contaminated_extraction_df |> 
  group_by(extraction_batch_fk) |> 
  count() |> 
  rename(num_contaminated_samples = n)

```

```{r}
#| label: contaminated-samples-per-worksheet
#| include: FALSE

plot_contamination_ps_ws <- number_ploidy_regions_mod |> 
  group_by(ws_fct, category, .drop = FALSE) |> 
  count() |> 
  filter(category == "potential contamination") |> 
  ggplot(aes(x = ws_fct, y = n)) +
  geom_col(colour = "black", fill = "white", position = "stack") +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
    labs(x = "PanSolid worksheet", y = "")

```

```{r}
#| label: contaminated-qiasymphony-batches
#| include: FALSE

qs_extraction_df_with_contaminated_count <- qs_extraction_df |> 
  left_join(contaminated_samples_per_batch, 
            join_by("extraction_batch_id" == "extraction_batch_fk")) |>  
  mutate(num_contaminated_samples = case_when(
    is.na(num_contaminated_samples) ~0,
    !is.na(num_contaminated_samples) ~num_contaminated_samples),
    run_day = as.Date(run_date)) 

plot_contamination_qs_batch <- qs_extraction_df_with_contaminated_count |> 
  mutate(extraction_batch_char = as.character(extraction_batch_id)) |> 
  ggplot(aes(x = extraction_batch_char,
             y = num_contaminated_samples)) +
  geom_col(colour = "black", fill = "white") +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
  labs(x = "QIAsymphony batch", y = "Contaminated samples") +
  scale_y_continuous(limits = c(0, 3),
                     breaks = c(0, 1, 2, 3))

```

```{r}
#| label: contamination-over-time
#| include: FALSE

plot_contamination_over_time <- qs_extraction_df_with_contaminated_count |> 
  ggplot(aes(x = run_day,
             y = num_contaminated_samples)) +
  geom_col(colour = "black", fill = "white") +
  theme_bw() +
  labs(x = "Date of QIAsymphony extraction", y = "")

```

@fig-contamination-monitoring shows the rate of contaminated samples over time.
In general, contamination does not appear to cluster on particular PanSolid worksheets or QIAsymphony batches, except for a peak on 1st August.

```{r}
#| label: fig-contamination-monitoring
#| fig-cap: "Contamination over time"
#| echo: FALSE
#| fig-width: 6
#| fig-height: 8

plot_contamination_ps_ws +
  plot_contamination_qs_batch +
  plot_contamination_over_time +
  plot_layout(ncol = 1)

```

{{< pagebreak >}}

## Are contaminated samples always in the same area of a worksheet?

```{r}
#| label: qiasymphony-run-positions
#| include: FALSE

qiasymphony_positions <- data.frame(
  "sort_order" = seq(1, 24, by = 1),
  "x_coordinate" = rep(1:6, each = 4),
  "y_coordinate" = rep(1:4, times = 6)
)

contaminated_extraction_df_positions <- contaminated_extraction_df |> 
  left_join(qiasymphony_positions,
            join_by("sort_order" == "sort_order"))

qiasymphony_layout_df <- contaminated_extraction_df_positions |> 
  group_by(sort_order, .drop = FALSE) |> 
  count() |> 
  left_join(qiasymphony_positions,
            join_by("sort_order" == "sort_order"))
  
plot_qiasymphony_positions <- ggplot(qiasymphony_layout_df, 
                                     aes(x = x_coordinate, y = y_coordinate)) +
  geom_point(aes(size = n)) +
  theme_bw() +
  labs(x = "", 
       y = "",
       title = "Contaminated sample locations on QIAsymphony batches",
       size = "Number of contaminated samples") +
  scale_y_reverse() +
  theme(legend.position = "bottom") +
  scale_x_continuous(limits = c(1, 6),
                     breaks = seq(1, 6, by = 1),
                     minor_breaks = FALSE,
                     position = "top")

```

```{r}
#| label: pansolid-positions
#| include: FALSE

pansolid_ws <- unique(number_ploidy_regions_live$worksheet)

contamination_pansolid_df <- dna_db_pcr_records |> 
  filter(sample %in% contamination_labnos) |> 
  select(sample, pcrid, position) |> 
  collect() 

pansolid_plate_coordinates <- define_plate_coordinates_96()

contamination_pansolid_df_mod <- contamination_pansolid_df |> 
  left_join(pansolid_plate_coordinates,
            by = "position")

plot_pansolid_positions <- contamination_pansolid_df_mod |> 
  group_by(x_coordinate, y_factor) |> 
  count() |> 
  ggplot(aes(x = x_coordinate,
             y = y_factor)) +
  geom_point(aes(size = n)) +
  theme_bw() +
  theme(legend.position = "bottom") +
  scale_x_continuous(limits = c(1, 6),
                     breaks = seq(1, 6, by = 1),
                     minor_breaks = FALSE, position = "top") +
  labs(x = "", y = "",
       title = "Contaminated sample locations on PanSolid worksheets",
        size = "Number of contaminated samples")

```

There does not appear to be a consistent pattern for where contaminated samples are located on PanSolid worksheets.
However, it is notable that samples in the 4th row of QIAsymphony runs are more likely to be impacted by contamination.

```{r}
#| label: fig-positions
#| echo: FALSE
#| fig-height: 7
#| fig-width: 6

plot_qiasymphony_positions +
  plot_pansolid_positions +
  plot_layout(ncol = 1)

```

```{r}
#| label: tbl-qiasymphony-positions
#| echo: FALSE

qiasymphony_layout_tbl <- qiasymphony_layout_df |> 
  group_by(y_coordinate) |> 
  summarise(total_contaminated = sum(n))

knitr::kable(qiasymphony_layout_tbl)

```

{{< pagebreak >}}

## Do contaminated samples come from the same pathology lab?

```{r}
#| label: sample-path-labs
#| include: FALSE

all_labnos <- unique(number_ploidy_regions_mod$labno)

sample_path_labs <- sample_tbl |> 
  filter(labno %in% all_labnos) |> 
  select(labno, consultant_address) |> 
  collect()

number_ploidy_regions_path_lab <- number_ploidy_regions_mod |> 
  left_join(sample_path_labs,
            by = "labno",
            relationship = "many-to-one") |> 
  mutate(path_lab = str_extract(string = consultant_address,
                                pattern = "^(.{20}).*"))

path_lab_summary <- number_ploidy_regions_path_lab |> 
  group_by(path_lab, category) |> 
  count() |> 
  pivot_wider(id_cols = path_lab,
              names_from = category,
              values_from = n,
              values_fill = 0) |> 
  arrange(desc(`no contamination`)) |> 
  # filter(!path_lab %in% c("", "Unknown", NA)) |> 
  mutate(contamination_rate = 
           round(`potential contamination` / (`potential contamination` + 
                                          `no contamination`)*100,1)) 

```

There is no evidence that a particular pathology lab is sending the majority of contaminated samples.

```{r}
#| label: tbl-path-lab-summary
#| echo: FALSE

knitr::kable(path_lab_summary)

```

```{r}
#| label: plot-folder
#| include: FALSE

plot_folder <- paste0(config::get("data_folderpath"),
                      "live_service/INC10994_contamination/contamination_plots/")

```

## Is there evidence of which sample is the source of the contamination?

There are 24 samples per QIAsymphony batch.

There are 48 samples per PanSolid worksheet.

Therefore to investigate cross-contamination we need to look at a few different PanSolid worksheets around the time that the sample was extracted.

Multiple QIAsymphony batches may be processed on the QIAsymphony instrument at a time.

Not all the samples on a QIAsymphony batch will necessarily be tested on PanSolid NGS, and PanSolid NGS is required to identify contamination.
Therefore in some cases it is not possible to exclude that the contamination has originated from within a QIAsymphony batch.

I have approached this by quantifying the number of homozygous SNPs which are shared between the two samples.
This provides an objective metric of similarity, rather than subjective judgement based on plots.

The only issue is that comparing thousands of SNPs for hundreds of samples is computationally quite intensive - hence I've had to specify certain code chunks not to evaluate, otherwise this report does not render and RStudio crashes.

```{r}
#| label: sample-24026628b
#| include: FALSE
#| eval: FALSE

WS150465_data <- collate_snp_data("WS150465")

WS150529_data <- collate_snp_data("WS150529")

all_data_24026628 <- rbind(WS150465_data, WS150529_data) 

results_24026628 <- search_for_contaminant(all_data_24026628,
                       "24026628b_WS150465")

plot_24026628_match <- make_contamination_snp_plot(all_data_24026628,
                            "24026628b_WS150465",
                            all_data_24026628,
                            "24053299_WS150529")

plot_24026628_no_match <- make_contamination_snp_plot(all_data_24026628,
                            "24026628b_WS150465",
                            all_data_24026628,
                            "25008693_WS150465")

ggsave(plot = plot_24026628_match,
       filename = paste0(plot_folder,
                         "plot_24026628_match.png"))

ggsave(plot = plot_24026628_no_match,
       filename =  paste0(plot_folder,
                          "plot_24026628_no_match.png"))

```

To show that this approach works, here are the results for a case where I deliberately mixed DNA together.

Sample 24026628b on WS150465.

![Example of samples which weren't mixed](`r paste0(plot_folder, "plot_24026628_no_match.png")`)

![Example of mixed samples](`r paste0(plot_folder, "plot_24026628_match.png")`)

```{r}
#| label: sample-25024438
#| include: FALSE
#| eval: FALSE

WS152914_data <- collate_snp_data("WS152914")

WS152872_data <- collate_snp_data("WS152872")

WS152973_data <- collate_snp_data("WS152973")

all_data_25024438 <- rbind(WS152914_data, WS152872_data, WS152973_data)

results_25024438 <- search_for_contaminant(all_data_25024438, "25024438_WS152914")

plot_25024438 <- make_contamination_snp_plot(s1_df = all_data_25024438,
                         s1_id = "25024438_WS152914",
                         s2_df = all_data_25024438,
                         s2_id = "25024440_WS152973")

ggsave(plot = plot_25024438,
       filename = paste0(plot_folder, "plot_25024438.png"))

```

```{r}
#| label: summary-25024438
#| eval: FALSE
#| include: FALSE

summary_25024438 <- rbind(make_contamination_summary_table("25024438", "WS152914",
                                       "contaminated"),
      make_contamination_summary_table("25024440", "WS152973",
                                       "contaminant"))

knitr::kable(summary_25024438)

```

```{r}
#| include: FALSE
#| label: summary-tbl-initial

inc10994_summary_tbl <- data.frame(
  labno = c("25024438"),
  status = c("contaminant found"),
  likely_source = c("pathology lab")
)

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: sample-25024565

results_25024565 <- search_for_contaminant(all_data_25024438,
                                           "25024565_WS152973")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25024565", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| include: FALSE
#| eval: FALSE
#| label: sample-25026341

WS153211_data <- collate_snp_data("WS153211")

WS153248_all_files <- get_worksheet_filepaths(worksheet = "WS153248",
                                          file_regex = "Results_SNVs_Indels.*.xlsx")

WS153248_file_df <- data.frame(
  "filepath" = c(WS153248_all_files)) |> 
  filter(grepl(pattern = "Unannotated_Files",
               x = filepath))

WS153248_files <- WS153248_file_df$filepath

WS153248_data <- WS153248_files |> 
  map(\(WS153248_files) read_snp_sheet(WS153248_files)) |> 
  list_rbind()

WS153325_data <- collate_snp_data("WS153325")

WS153386_data <- collate_snp_data("WS153386") 

WS153389_data <- collate_snp_data("WS153389")

WS153445_data <- collate_snp_data("WS153445")

all_data_25026341 <- rbind(WS153211_data, WS153248_data,
                  WS153386_data, WS153389_data,
                  WS153445_data, WS153325_data)

results_25026341 <- search_for_contaminant(all_data_25026341,
                                           "25026341_WS153248")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25026341", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| include: FALSE
#| eval: FALSE
#| label: sample-25026815

WS153325_data <- collate_snp_data("WS153325")

WS153318_data <- collate_snp_data("WS153318")

WS153147_data <- collate_snp_data("WS153147")

all_data_25026815 <- rbind(WS153325_data, 
                           WS153318_data,
                           WS153147_data,
                           WS153386_data,
                           WS153248_data)

results_25026815 <- search_for_contaminant(all_data_25026815, 
                                           "25026815_WS153325")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25026815", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| include: FALSE
#| eval: FALSE
#| label: sample-25026850

results_25026850 <- search_for_contaminant(all_data_25026815, 
                                           "25026850_WS153325")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25026850", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| include: FALSE
#| eval: FALSE
#| label: sample-25027112

WS153386_data <- collate_snp_data("WS153386")

WS153389_data <- collate_snp_data("WS153389")

WS153445_data <- collate_snp_data("WS153445")

all_data_25027112 <- rbind(WS153386_data,
                           WS153389_data,
                           WS153445_data,
                           WS153325_data,
                           WS153503_data)

results_25027112 <- search_for_contaminant(all_data_25027112,
                                           "25027112_WS153389")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25027112", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| include: FALSE
#| eval: FALSE
#| label: sample-25028207

WS153634_data <- collate_snp_data("WS153634")

WS153503_data <- collate_snp_data("WS153503")

WS153552_data <- collate_snp_data("WS153552")

all_data_25028207 <- rbind(WS153634_data,
                           WS153503_data,
                           WS153552_data)

results_25028207 <- search_for_contaminant(all_data_25028207,
                                           "25028207_WS153552")

plot_25028207 <- make_contamination_snp_plot(all_data_25028207,
                            "25028207_WS153552",
                            all_data_25028207,
                            "25028293_WS153552",
                            het_vaf_upper_threshold = 80,
                            het_vaf_lower_threshold = 20)

ggsave(plot = plot_25028207,
       filename = paste0(plot_folder,
                         "plot_25028207.png"))


```

```{r}
#| label: summary-25028207
#| eval: FALSE
#| include: FALSE

rbind(make_contamination_summary_table("25028207", "WS153552",
                                       "contaminated"),
      make_contamination_summary_table("25028293", "WS153552",
                                       "contaminant"))

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25028207", 
        status = "contaminant found", 
        likely_source = "PanSolid setup or QIAsymphony extraction")

```

```{r}
#| label: sample-25028781
#| include: FALSE
#| eval: FALSE

WS153692_data <- collate_snp_data("WS153692")

WS153693_data <- collate_snp_data("WS153693")

WS153752_data <- collate_snp_data("WS153752")

all_data_25028781 <- rbind(WS153692_data,
                           WS153693_data,
                           WS153752_data)

results_25028781 <- search_for_contaminant(all_data_25028781,
                                           "25028781_WS153693")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25028781", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25028039
#| include: FALSE
#| eval: FALSE

WS153806_data <- collate_snp_data("WS153806")

all_data_25028039 <- rbind(WS153752_data,
                           WS153693_data,
                           WS153806_data)

results_25028039 <- search_for_contaminant(all_data_25028039,
                                           "25028039_WS153752")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25028039", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25028766
#| include: FALSE
#| eval: FALSE

WS153887_data <- collate_snp_data("WS153887")

WS153962_data <- collate_snp_data("WS153962")

all_data_25028766 <- rbind(WS153806_data, WS153887_data, WS153962_data)

results_25028766 <- search_for_contaminant(all_data_25028766,
                                           "25028766_WS153887")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25028766", 
        status = "contaminant not found", 
        likely_source = "Newcastle lab?")

```

```{r}
#| label: sample-25030208
#| include: FALSE
#| eval: FALSE

results_25030208 <- search_for_contaminant(all_data_25028766,
                                           "25030208_WS153887")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25030208", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25031248
#| include: FALSE
#| eval: FALSE

WS154119_data <- collate_snp_data("WS154119")

all_data_25031248 <- rbind(WS153994_data,
                           WS154037_data,
                           WS154119_data)

results_25031248 <- search_for_contaminant(all_data_25031248,
                                           "25031248_WS154037")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25031248", 
        status = "contaminant not found", 
        likely_source = "Cambridge lab?")

```

```{r}
#| label: sample-25031305
#| include: FALSE
#| eval: FALSE

results_25031305 <- search_for_contaminant(all_data_25031248,
                                           "25031305_WS154037")
```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25031305", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25034585
#| include: FALSE
#| eval: FALSE

WS154392_data <- collate_snp_data("WS154392")

WS154503_data <- collate_snp_data("WS154503")

WS154544_data <- collate_snp_data("WS154544")

all_data_25034585 <- rbind(WS154392_data,
                           WS154503_data,
                           WS154544_data)

results_25034585 <- search_for_contaminant(all_data_25034585,
                                           "25034585_WS154503")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25034585", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25035495
#| include: FALSE
#| eval: FALSE

WS154624_data <- collate_snp_data("WS154624")

WS154675_data <- collate_snp_data("WS154675")

all_data_25035495 <- rbind(WS154624_data, WS154675_data)

results_25035495 <- search_for_contaminant(all_data_25035495,
                                           "25035495_WS154624")

plot_25035495 <- make_contamination_snp_plot(all_data_25035495,
                            "25035495_WS154624",
                            all_data_25035495,
                            "25035560_WS154675",
                            het_vaf_upper_threshold = 70,
                            het_vaf_lower_threshold = 30)

ggsave(plot = plot_25035495,
       filename = paste0(plot_folder,
                         "plot_25035495.png"))

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25035495

rbind(make_contamination_summary_table("25035495", "WS154624",
                                       "contaminated"),
      make_contamination_summary_table("25035560", "WS154675",
                                       "contaminant"))

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25035495", 
        status = "contaminant found", 
        likely_source = "pathology lab")

```

```{r}
#| label: sample-25035635
#| include: FALSE
#| eval: FALSE

results_25035635 <- search_for_contaminant(WS154675_data,
                                           "25035635_WS154675")

plot_25035635 <- make_contamination_snp_plot(WS154675_data,
                            "25035635_WS154675",
                            WS154675_data,
                            "25035862_WS154675",
                            het_vaf_upper_threshold = 85,
                            het_vaf_lower_threshold = 15)

ggsave(plot = plot_25035635,
       filename = paste0(plot_folder,
                         "plot_25035635.png"))


```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25035635

rbind(make_contamination_summary_table("25035635", "WS154675",
                                       "contaminated"),
      make_contamination_summary_table("25035862", "WS154675",
                                       "contaminant"))
```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25035635", 
        status = "contaminant found", 
        likely_source = "QIAsymphony extraction")

```

```{r}
#| label: sample-25036241
#| include: FALSE
#| eval: FALSE

WS154716_data <- collate_snp_data("WS154716")

results_25036241 <- search_for_contaminant(WS154716_data,
                                           "25036241_WS154716")

plot_25036241 <- make_contamination_snp_plot(WS154716_data,
                            "25036241_WS154716",
                            WS154716_data,
                            "25036234_WS154716")

ggsave(plot = plot_25036241,
       filename = paste0(plot_folder,
                         "plot_25036241.png"))

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25036241

rbind(make_contamination_summary_table("25036241", "WS154716",
                                 "contaminated"),
      make_contamination_summary_table("25036234", "WS154716",
                                       "contaminant"))
```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25036241", 
        status = "contaminant found", 
        likely_source = "PanSolid setup or QIAsymphony extraction")

```

```{r}
#| label: sample-25038540
#| include: FALSE
#| eval: FALSE

WS155071_data <- collate_snp_data("WS155071")

results_25038540 <- search_for_contaminant(WS155071_data,
                                           "25038540_WS155071")

plot_25038540 <- make_contamination_snp_plot(WS155071_data,
                            "25038540_WS155071",
                            WS155071_data,
                            "25038464_WS155071")

ggsave(plot = plot_25038540,
       filename = paste0(plot_folder,
                         "plot_25038540.png"))

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25038540

rbind(make_contamination_summary_table("25038540", "WS155071",
                                 "contaminated"),
      make_contamination_summary_table("25038464", "WS155071",
                                 "contaminant"))

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25038540", 
        status = "contaminant found", 
        likely_source = "QIAsymphony extraction")

```

```{r}
#| label: sample-25039656
#| eval: FALSE
#| include: FALSE

WS155167_data <- collate_snp_data("WS155167")

WS155212_data <- collate_snp_data("WS155212")

WS155317_data <- collate_snp_data("WS155317")

all_data_25039656 <- rbind(WS155167_data, WS155212_data, WS155317_data)

results_25039656 <- search_for_contaminant(all_data_25039656,
                                           "25039656_WS155212")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25039656", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25040187
#| include: FALSE
#| eval: FALSE

WS155212_data <- collate_snp_data("WS155212")

WS155317_data <- collate_snp_data("WS155317")

WS155338_data <- collate_snp_data("WS155338")

all_data_25040187 <- rbind(WS155212_data, WS155317_data,
                          WS155338_data)

results_25040187 <- search_for_contaminant(all_data_25040187,
                                           "25040187_WS155317")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25040187", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25041888
#| include: FALSE
#| eval: FALSE

WS155586_data <- collate_snp_data("WS155586")

WS155587_data <- collate_snp_data("WS155587")

WS155626_data <- collate_snp_data("WS155626")

all_data_25041888 <- rbind(WS155586_data, 
                           WS155587_data,
                           WS155626_data)

results_25041888 <- search_for_contaminant(all_data_25041888,
                                           "25041888_WS155587")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25041888", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25042695
#| include: FALSE
#| eval: FALSE

WS155626_data

WS155702_data <- collate_snp_data("WS155702")

WS155788_data <- collate_snp_data("WS155788")

WS155798_data <- collate_snp_data("WS155798")

all_data_25042695 <- rbind(WS155626_data, WS155702_data,
                           WS155788_data, WS155798_data)

results_25042695 <- search_for_contaminant(all_data_25042695,
                                           "25042695_WS155702")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25042695", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25045055
#| include: FALSE
#| eval: FALSE

WS156025_data <- collate_snp_data("WS156025")


results_25045055 <- search_for_contaminant(WS156025_data, 
                                            "25045055_WS156025")

plot_25045055 <- make_contamination_snp_plot(WS156025_data,
                            "25045055_WS156025",
                            WS156025_data,
                            "25045186_WS156025",
                            het_vaf_upper_threshold = 70,
                            het_vaf_lower_threshold = 30)

ggsave(plot = plot_25045055,
       filename = paste0(plot_folder,
                         "plot_25045055.png"))

```

```{r}
#| eval: FALSE
#| label: summary-25045055
#| include: FALSE

rbind(make_contamination_summary_table("25045055", "WS156025",
                                       "contaminated"),
      make_contamination_summary_table("25045186", "WS156025",
                                       "contaminant"))

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25045055", 
        status = "contaminant found", 
        likely_source = "PanSolid setup or QIAsymphony extraction")

```

```{r}
#| label: sample-25045248
#| include: FALSE
#| eval: FALSE

results_25045248 <- search_for_contaminant(WS156025_data,
                                           "25045248_WS156025")

plot_25045248 <- make_contamination_snp_plot(WS156025_data,
                            "25045248_WS156025",
                            WS156025_data,
                            "25045186_WS156025",
                            het_vaf_upper_threshold = 70,
                            het_vaf_lower_threshold = 30)

ggsave(plot = plot_25045248,
       filename = paste0(plot_folder,
                         "plot_25045248.png"))

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25045248

rbind(make_contamination_summary_table("25045248", "WS156025",
                                       "contaminated"),
      make_contamination_summary_table("25045186", "WS156025",
                                       "contaminant"))
```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25045248", 
        status = "contaminant found", 
        likely_source = "PanSolid setup")

```

```{r}
#| label: sample-25045270
#| include: FALSE
#| eval: FALSE

plot_25045270 <- make_contamination_snp_plot(WS156025_data,
                            "25045270_WS156025",
                            WS156025_data,
                            "25045186_WS156025",
                            het_vaf_upper_threshold = 70,
                            het_vaf_lower_threshold = 30)

ggsave(plot = plot_25045270,
       filename = paste0(plot_folder,
                         "plot_25045270.png"))

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25045270

rbind(make_contamination_summary_table("25045270", "WS156025",
                                       "contaminated"),
      make_contamination_summary_table("25045186", "WS156025",
                                       "contaminant"))

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25045270", 
        status = "contaminant found", 
        likely_source = "PanSolid setup")

```

```{r}
#| label: sample-25047626
#| include: FALSE
#| eval: FALSE

WS156356_data <- collate_snp_data("WS156356")

results_25047626 <- search_for_contaminant(WS156356_data,
                                           "25047626_WS156356")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25047626", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25048537
#| include: FALSE
#| eval: FALSE

WS156454_data <- collate_snp_data("WS156454")

WS156496_data <- collate_snp_data("WS156496")

WS156563_data <- collate_snp_data("WS156563")

all_data_25048537 <- rbind(WS156454_data, WS156496_data,
                          WS156563_data)

results_25048537 <- search_for_contaminant(all_data_25048537,
                                          "25048537_WS156496")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25048537", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25048829
#| include: FALSE
#| eval: FALSE

results_25048829 <- search_for_contaminant(all_data_25048537,
                                           "25048829_WS156496")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25048829", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25051800
#| eval: FALSE
#| include: FALSE

WS156990_data <- collate_snp_data("WS156990")

results_25051800 <- search_for_contaminant(WS156990_data,
                       "25051800_WS156990")

plot_25051800 <- make_contamination_snp_plot(WS156990_data,
                            "25051800_WS156990",
                            WS156990_data,
                            "25051808_WS156990",
                            het_vaf_upper_threshold = 70,
                            het_vaf_lower_threshold = 30)

ggsave(plot = plot_25051800,
       filename =  paste0(plot_folder,
                          "plot_25051800.png"))

```

```{r}
#| eval: FALSE
#| include: FALSE
#| label: summary-25051800

rbind(make_contamination_summary_table("25051800", "WS156990",
                                       "contaminant"),
      make_contamination_summary_table("25051808", "WS156990",
                                       "contaminant"))

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25051800", 
        status = "contaminant found", 
        likely_source = "PanSolid setup or QIAsymphony extraction")

```

```{r}
#| eval: FALSE
#| include: FALSE

WS156903_data <- collate_snp_data("WS156903")

WS157059_data <- collate_snp_data("WS157059")

all_data_25052084 <- rbind(WS156990_data, WS156903_data, WS157059_data)

results_25052084 <- search_for_contaminant(all_data_25052084,
                                           "25052084_WS156990")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25052084", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| eval: FALSE
#| include: FALSE

WS157130_data <- collate_snp_data("WS157130")

WS157102_data <- collate_snp_data("WS157102")

all_data_25052591 <- rbind(WS157059_data,
                           WS157130_data,
                           WS157102_data)

results_25052591 <- search_for_contaminant(all_data_25052591,
                                           "25052591_WS157102")

```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25052591", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25053859
#| eval: FALSE
#| include: FALSE

WS157146_data <- collate_snp_data("WS157146")

WS157218_data <- collate_snp_data("WS157218")

WS157283_data <- collate_snp_data("WS157283")

all_data_25053859 <- rbind(WS157146_data,
                           WS157218_data,
                           WS157283_data)

results_25053859 <- search_for_contaminant(all_data_25053859,
                                           "25053859_WS157218")

```

```{r}
#| label: sample-25055138
#| eval: FALSE
#| include: FALSE

WS157478_data <- collate_snp_data("WS157478")

WS157464_data <- collate_snp_data("WS157464")

all_data_25055138 <- rbind(WS157478_data, WS157464_data)

results_25055138 <- search_for_contaminant(all_data_25055138,
                                           "25055138_WS157464")
```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25055138", 
        status = "contaminant not found", 
        likely_source = "")

```

```{r}
#| label: sample-25054809
#| include: FALSE
#| eval: FALSE

WS157554_data <- collate_snp_data("WS157554")

all_data_25054809 <- rbind(WS157554_data,
                           WS157464_data,
                           WS157478_data)

results_25054809 <- search_for_contaminant(all_data_25054809,
                                           "25054809_WS157478")
```

```{r}
#| include: FALSE

inc10994_summary_tbl <- add_row(inc10994_summary_tbl,
        labno = "25054809", 
        status = "contaminant not found", 
        likely_source = "")

```

Here is a summary table of all the samples that I have checked using this method.

```{r}
#| echo: FALSE

knitr::kable(inc10994_summary_tbl)

```

And here is a breakdown of the overall results.

```{r}
#| echo: FALSE

knitr::kable(inc10994_summary_tbl |> 
               group_by(status) |> 
               count() |> 
               janitor::adorn_totals())

```

Here is a list of QIAsymphony batches on which there were samples with apparent contamination and where I could not find a the contaminant via SNP checking.
For each batch, I have included the percentage of samples which were tested on PanSolid NGS.

```{r}
#| label: tbl-qiasymphony-batch-tested-on-pansolid
#| echo: FALSE

ps_batch_table <- rbind(
  ps_samples_per_qs_batch("92969"),
      ps_samples_per_qs_batch("92907"),
      ps_samples_per_qs_batch("92552"),
      ps_samples_per_qs_batch("93027"),
      ps_samples_per_qs_batch("93040"),
      ps_samples_per_qs_batch("93162"),
      ps_samples_per_qs_batch("93314"),
      ps_samples_per_qs_batch("93162"),
      ps_samples_per_qs_batch("93577"),
      ps_samples_per_qs_batch("93750"),
      ps_samples_per_qs_batch("94344"),
      ps_samples_per_qs_batch("95540"),
      ps_samples_per_qs_batch("95674"),
      ps_samples_per_qs_batch("96448"),
  ps_samples_per_qs_batch("96604"),
  ps_samples_per_qs_batch("96651"),
  ps_samples_per_qs_batch("97180"),
  ps_samples_per_qs_batch("97292"),
  ps_samples_per_qs_batch("97472"),
  ps_samples_per_qs_batch("97677"),
  ps_samples_per_qs_batch("97616"))

knitr::kable(ps_batch_table)

```

# Conclusion

From this investigation I have drawn these conclusions:

- Contamination can be automatically screened for by counting the number of ploidy regions.

- The rate of contamination is below 1%, which is lower than published reports.

- There is no consistent source of the contamination, although there was a spike of 3 contaminated samples all extracted on 1st August.
