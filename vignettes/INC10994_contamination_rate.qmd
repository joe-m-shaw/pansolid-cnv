---
title: "INC10994: Contamination Investigation"
author: "Joe Shaw (CS20980)"
format:
  html:
    embed-resources: true
editor: visual
---

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(patchwork)
library(readxl)

source(here::here("scripts/connect_to_dna_db.R"))
source(here::here("functions/pansolid_cnv_excel_functions.R"))
source(here::here("functions/chromosome_arm_functions.R"))
source(here::here("functions/contamination_functions_INC10994.R"))

```

# Introduction

Possible causes of contamination

Patient: - Bone marrow transplant - Reference material made of mixed samples

Pathology lab

DNA extraction

DNA dilutions

Library preparation (DNA mixed prior to indexing)

# Methods

The number of ploidy regions for a sample can be used as marker for contamination.

```{r}
#| label: load-data
#| include: FALSE

number_ploidy_regions_live <- read_csv(paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "number_ploidy_regions_live.csv"),
                 col_types = "ccccd") |> 
  mutate(ws_number = as.numeric(str_extract(string = worksheet,
                                 pattern = "WS(\\d{6})",
                                 group = 1)),
         ws_fct = factor(worksheet, levels = unique(worksheet)),
         labno_suffix_worksheet = paste0(labno, "_", worksheet))

percent_138x_live <- read_csv(paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "percent_138x_live.csv"),
                 col_types = "ccccccccd") |> 
  mutate(panel = str_extract(string = filename,
                             pattern = "^Annotated_(.*)_WS\\d{6}.*.xlsx$",
                             group = 1))

stopifnot(anyNA(percent_138x_live$panel) == FALSE)

stdev_live <- read_csv(paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "stdev_live.csv"),
                 col_types = "ccccccccd")

```

Data from `r nrow(number_ploidy_regions_live)` samples from `r length(unique(number_ploidy_regions_live$worksheet))` worksheets (WS`r min(number_ploidy_regions_live$ws_number)` to WS`r max(number_ploidy_regions_live$ws_number)`) was collated.

{{< pagebreak >}}

# Results

## Can we use number of ploidy regions to detect potential contamination?

```{r}

number_ploidy_regions_live_qc <- number_ploidy_regions_live |> 
  left_join(stdev_live |> 
              filter(!duplicated(labno_suffix_worksheet)) |> 
              select(labno_suffix_worksheet, stdev_noise),
            by = "labno_suffix_worksheet",
            relationship = "one-to-one") |> 
  left_join(percent_138x_live |> 
              filter(!duplicated(labno_suffix_worksheet)) |>
              select(labno_suffix_worksheet, percent_138x, panel),
            by = "labno_suffix_worksheet",
            relationship = "one-to-one")

potential_contamination_cases <- number_ploidy_regions_live_qc |> 
  filter(stdev_noise < 0.7 &
           percent_138x > 75 &
           number_ploidy_regions >= 150)

potential_contamination_labnos <- potential_contamination_cases$labno

potential_contamination_names <- sample_tbl |> 
  filter(labno %in% potential_contamination_labnos) |> 
  select(labno, firstname, surname) |> 
  collect()

write_csv(potential_contamination_cases |> 
            left_join(potential_contamination_names,
                      by = "labno",
                      # Some samples have been tested mutliple times
                      relationship = "many-to-one") |> 
            arrange(worksheet) |> 
            select(labno_suffix_worksheet, worksheet, panel,
                   labno, firstname, surname,
                   number_ploidy_regions),
          paste0(config::get("data_folderpath"),
                 "live_service/INC10994_contamination/",
                 "potential_contamination_cases.csv"))

```

```{r}

potential_contamination_cases_reviewed <- read_excel(
  paste0(config::get("data_folderpath"),
         "live_service/INC10994_contamination/",
         "potential_contamination_cases_reviewed.xlsx"),
  col_types = c("text", "text", "text", "text",
                "text", "text", "numeric", "text"))

```


```{r}
#| label: all-worksheets
#| echo: FALSE

ggplot(number_ploidy_regions_live_qc, aes(x = worksheet,
                                       y = number_ploidy_regions)) +
  geom_boxplot() +
  geom_hline(yintercept = 150,linetype = "dashed") +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
  scale_y_continuous(limits = c(0, 500),
                     breaks = c(seq(0, 500, by = 100), 150))

```

All cases with over 150 ploidy regions were reviewed.

```{r}
#| label: load-reviewed-data
#| include: FALSE

number_ploidy_regions_mod <- number_ploidy_regions_live_qc |> 
  left_join(potential_contamination_cases_reviewed |> 
               select(labno_suffix_worksheet, visual_inspection),
             by = "labno_suffix_worksheet") |> 
  mutate(category = case_when(
    visual_inspection == "potential contamination" ~"potential contamination",
    TRUE ~"no contamination"
  ),
  category = factor(category, levels = c("potential contamination",
                                         "no contamination")),
  visual_inspection = factor(visual_inspection,
                             levels = c("disordered genome",
                                        "potential contamination",
                                        "reference material",
                                        "bone marrow transplant")))

```

Cases which seem to be genuine contamination tend to have over 200 regions, whilst samples with disordered genomes (such as ovarian cancer samples) tend to have below 200.
Other possible causes of high ploidy region counts are reference materials with mixed DNA and samples with poor quality metrics (high noise and low coverage).
However, without confirmatory testing, interpretation of contamination from VAF plots is subjective.

```{r}
#| label: fig-ploidy-regions-over-150
#| echo: FALSE

number_ploidy_regions_mod |> 
  filter(!is.na(visual_inspection)) |> 
  ggplot(aes(x = visual_inspection,
               y = number_ploidy_regions)) +
  geom_jitter(shape = 21, width = 0.1) +
  theme_bw() +
  theme(axis.text.x = element_text()) +
  labs(x = "", y = "Number of ploidy regions") +
  geom_hline(yintercept = 200, linetype = "dashed")

```

Despite this, a ploidy region count of 200 is an adequate threshold for detecting potentially contaminated samples.

```{r}
#| label: tbl-visual-inspection-summary
#| echo: FALSE

number_ploidy_regions_mod |> 
  filter(number_ploidy_regions >= 200 &
           stdev_noise < 0.7 &
           percent_138x >= 75) |> 
  group_by(visual_inspection) |> 
  summarise(n = n()) |> 
  arrange(desc(n)) |> 
  mutate(percent = round((n/sum(n))*100, 1))

```

## What is the rate of contaminated samples?

```{r}
#| label: tbl-contamination-rate
#| echo: FALSE

tbl_contamination_rate <- number_ploidy_regions_mod |> 
  group_by(category) |> 
  summarise(n = n()) |> 
  mutate(percent = round((n/sum(n))*100, 1)) |> 
  janitor::adorn_totals()

knitr::kable(tbl_contamination_rate)

```

{{< pagebreak >}}

## Do contaminated samples cluster on particular worksheets or batches?

```{r}
#| label: qiasymphony-run-details
#| include: FALSE

contamination_df <- number_ploidy_regions_mod |> 
  filter(category == "potential contamination")

contamination_labnos <- unique(contamination_df$labno)

qs_extraction_df <- extraction_batch_tbl |> 
  filter(extraction_method_fk == 33 &
           run_date > "2025-04-21 00:00:00") |> 
  collect()

qs_batches <- unique(qs_extraction_df$extraction_batch_id)

contaminated_extraction_df <- extraction_tbl |> 
  filter(lab_no %in% contamination_labnos &
           extraction_batch_fk %in% qs_batches) |> 
  collect() |> 
  rename(labno = lab_no) |> 
  mutate(sort_order_fct = factor(sort_order, levels = seq(1, 24, by = 1)))

contaminated_samples_per_batch <- contaminated_extraction_df |> 
  group_by(extraction_batch_fk) |> 
  count() |> 
  rename(num_contaminated_samples = n)

```

```{r}
#| label: contaminated-samples-per-worksheet
#| include: FALSE

plot_contamination_ps_ws <- number_ploidy_regions_mod |> 
  group_by(ws_fct, category, .drop = FALSE) |> 
  count() |> 
  filter(category == "potential contamination") |> 
  ggplot(aes(x = ws_fct, y = n)) +
  geom_col(colour = "black", fill = "white", position = "stack") +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
    labs(x = "PanSolid worksheet", y = "")

```

```{r}
#| label: contaminated-qiasymphony-batches
#| include: FALSE

qs_extraction_df_with_contaminated_count <- qs_extraction_df |> 
  left_join(contaminated_samples_per_batch, 
            join_by("extraction_batch_id" == "extraction_batch_fk")) |>  
  mutate(num_contaminated_samples = case_when(
    is.na(num_contaminated_samples) ~0,
    !is.na(num_contaminated_samples) ~num_contaminated_samples),
    run_day = as.Date(run_date)) 

plot_contamination_qs_batch <- qs_extraction_df_with_contaminated_count |> 
  mutate(extraction_batch_char = as.character(extraction_batch_id)) |> 
  ggplot(aes(x = extraction_batch_char,
             y = num_contaminated_samples)) +
  geom_col(colour = "black", fill = "white") +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
  labs(x = "QIAsymphony batch", y = "Contaminated samples") +
  scale_y_continuous(limits = c(0, 3),
                     breaks = c(0, 1, 2, 3))

```

```{r}
#| label: contamination-over-time
#| include: FALSE

plot_contamination_over_time <- qs_extraction_df_with_contaminated_count |> 
  ggplot(aes(x = run_day,
             y = num_contaminated_samples)) +
  geom_col(colour = "black", fill = "white") +
  theme_bw() +
  labs(x = "Date of QIAsymphony extraction", y = "")

```

```{r}
#| label: fig-contamination-monitoring
#| fig-cap: "Contamination over time"
#| echo: FALSE
#| fig-width: 6
#| fig-height: 8

plot_contamination_ps_ws +
  plot_contamination_qs_batch +
  plot_contamination_over_time +
  plot_layout(ncol = 1)

```

{{< pagebreak >}}

## Are contaminated samples always in the same area of a worksheet?

```{r}
#| label: qiasymphony-run-positions
#| include: FALSE

qiasymphony_positions <- data.frame(
  "sort_order" = seq(1, 24, by = 1),
  "x_coordinate" = rep(1:6, each = 4),
  "y_coordinate" = rep(1:4, times = 6)
)

contaminated_extraction_df_positions <- contaminated_extraction_df |> 
  left_join(qiasymphony_positions,
            join_by("sort_order" == "sort_order"))

qiasymphony_layout_df <- contaminated_extraction_df_positions |> 
  group_by(sort_order, .drop = FALSE) |> 
  count() |> 
  left_join(qiasymphony_positions,
            join_by("sort_order" == "sort_order"))
  
plot_qiasymphony_positions <- ggplot(qiasymphony_layout_df, 
                                     aes(x = x_coordinate, y = y_coordinate)) +
  geom_point(aes(size = n)) +
  theme_bw() +
  labs(x = "", 
       y = "",
       title = "Contaminated sample locations on QIAsymphony batches",
       size = "Number of contaminated samples") +
  scale_y_reverse() +
  theme(legend.position = "bottom") +
  scale_x_continuous(limits = c(1, 6),
                     breaks = seq(1, 6, by = 1),
                     minor_breaks = FALSE,
                     position = "top")

```

```{r}
#| label: pansolid-positions
#| include: FALSE

pansolid_ws <- unique(number_ploidy_regions_live$worksheet)

contamination_pansolid_df <- dna_db_pcr_records |> 
  filter(sample %in% contamination_labnos) |> 
  select(sample, pcrid, position) |> 
  collect() 

pansolid_plate_coordinates <- define_plate_coordinates_96()

contamination_pansolid_df_mod <- contamination_pansolid_df |> 
  left_join(pansolid_plate_coordinates,
            by = "position")

plot_pansolid_positions <- contamination_pansolid_df_mod |> 
  group_by(x_coordinate, y_factor) |> 
  count() |> 
  ggplot(aes(x = x_coordinate,
             y = y_factor)) +
  geom_point(aes(size = n)) +
  theme_bw() +
  theme(legend.position = "bottom") +
  scale_x_continuous(limits = c(1, 6),
                     breaks = seq(1, 6, by = 1),
                     minor_breaks = FALSE, position = "top") +
  labs(x = "", y = "",
       title = "Contaminated sample locations on PanSolid worksheets",
        size = "Number of contaminated samples")

```

```{r}
#| label: fig-positions
#| echo: FALSE
#| fig-height: 7
#| fig-width: 6

plot_qiasymphony_positions +
  plot_pansolid_positions +
  plot_layout(ncol = 1)

```

```{r}

qiasymphony_layout_tbl <- qiasymphony_layout_df |> 
  group_by(y_coordinate) |> 
  summarise(total_contaminated = sum(n))

knitr::kable(qiasymphony_layout_tbl)

```

```{r}
#| eval: FALSE
#| include: FALSE

contaminated_extraction_df_positions |> 
  left_join(qs_extraction_df |> 
              select(extraction_batch_id, run_date),
            join_by("extraction_batch_fk" == "extraction_batch_id")) |> 
  ggplot(aes(x = run_date, y = y_coordinate)) +
  geom_jitter(height = 0.1, shape = 21)

```

{{< pagebreak >}}

## Do contaminated samples come from the same pathology lab?

```{r}
#| eval: FALSE
#| include: FALSE

all_labnos <- unique(number_ploidy_regions_mod$labno)

sample_path_labs <- sample_tbl |> 
  filter(labno %in% all_labnos) |> 
  select(labno, consultant_address) |> 
  collect()

number_ploidy_regions_path_lab <- number_ploidy_regions_mod |> 
  left_join(sample_path_labs,
            by = "labno",
            relationship = "many-to-one")

```

# Conclusion
