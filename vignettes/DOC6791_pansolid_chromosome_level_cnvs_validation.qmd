---
title: "DOC6791: Validation of Detecting Chromosome Level Copy Number Variants with the PanSolid CLC pipeline"
format: 
  docx:
    reference-doc: north_west_glh_document_template.docx
    link-citations: true
toc: true
toc-title: "Table of Contents"
bibliography: pansolid_cnv_references.bib
csl: harvard-manchester-metropolitan-university.csl
fig-align: "left"
fig-width: 6
editor: 
  markdown: 
    wrap: 72
---

```{r}
#| label: packages-and-functions
#| include: FALSE

library(tidyverse)
library(janitor)
library(here)
library(readxl)
library(patchwork)

source(here("functions/extract_pansolid_cnv_coordinates.R"))
source(here("functions/pansolid_cnv_excel_functions.R"))
source(here("functions/chromosome_arm_functions.R"))

```

{{< pagebreak >}}

# Authors

Author: Joe Shaw (CS20980)

Project Lead(s): Joe Shaw, Elizabeth Sollars, Eleanor Baker, Helene
Schlecht, George Burghel

Date: `r Sys.Date()`

Author contact: joseph.shaw2\@mft.nhs.uk; joseph.shaw3\@nhs.net

# Acronyms

**ATRX**: Î±-thalassemia/mental retardation syndrome X-linked

**cIMPACT-NOW:** consortium to Inform Molecular and Practical Approaches
to CNS Tumour taxonomy-Not Official WHO

**CLC**: there is no official acronym for CLC, although unofficially it was referred to as "Cake Loving Company" by CLC employees [@sollars2025]

**DNA**: DeoxyriboNucleic Acid

**FFPE**: Formalin-Fixed Paraffin Embedded

**FISH**: Fluorescent In-Situ Hybridisation

**GLH**: Genomic Laboratory Hub

**IDH**: isocitrate dehydrogenase

**IHC**: Immuno-HistoChemistry

**LOH**: Loss Of Heterozygosity

**MGMT**: O6-Methylguanine-DNA methyltransferase

**NCC**: Neoplastic Cell Content

**NGS**: Next Generation Sequencing

**NHS**: National Health Service

**PCR:** Polymerase Chain Reaction

**SNP:** Single Nucleotide Polymorphism

**TERT**: Telomerase Reverse Transcriptase

**WGS**: Whole Genome Sequencing

**WHO**: World Health Organisation

{{< pagebreak >}}

# Introduction

## Purpose

The purpose of this document is to describe the validation of detection
of chromosome level copy number variants (CNVs) in solid tumour samples
with the PanSolid v2 QIAseq enrichment panel using the PanSolid CLC
pipeline (v2.4) at the North West Genomic Laboratory Hub (GLH).
Detection of specific CNVs in different cancer types is required by the
most recent update of the
[NHS Genomic Test Directory for
Cancer](https://www.england.nhs.uk/publication/national-genomic-test-directories/),
with a specific focus on neurological tumours, malignant melanoma and renal cell carcinoma.

## Chromosome-level copy number variants

Large - impacting a whole chromosome or whole chromosome arm.
However CNVs can have any length ranging from a single base pair to a whole genome.

### Neurological tumours

Chromosome-level CNVs are increasingly important for classification of neurological tumours.
In the most recent update of the cIMPACT-NOW guidelines for meningiomas,
whole chromosome copy number analysis is recommended for tumour grading,
with at least two losses of chromosomes 6, 10, 14 or 18 sufficient to
categorise a tumour as molecular high-risk [@sahm2025].
Similarly, in the 2021 edition of the World Health Organisation Guidelines of Tumors of the Central Nervous System,
the detection of deletions of chromosome arms 1p and 19q, referred to as a 1p19 codeletion is required for classification of a tumour
as "Oligodendroglioma, IDH-mutant, and 1p/19q-codeleted" [@louis2021].
Critically, 1p19q codeletion is a key biomarker for distinguishing
between oligodendrogliomas, which contain the codeletion, and
astrocytomas, which do not [@masui2016].

The co-deletion of 1p and 19q, as determined by PCR-based LOH testing, was
shown to be associated with a good response to chemotherapy in
oligodendrogliomas [@cairncross1998]. The biological mechanism for this
observation remains unknown.
Later cytogenetic studies using Giemsa-banding and FISH showed that the
co-deletion of 1p and 19q was due to a recurrent translocation between
the two chromosomes. 
A derivative der(1;19)(q10;p10) chromosome was
observed within glioma cells, whilst the reciprocal der(1;19)(p10;q10)
chromosome is absent and presumably lost [@jenkins2006; @griffin2006].
Multiple techniques can be used to detect 1p19q codeletions, including PCR-based LOH testing, FISH and NGS methods, and there is no gold-standard method [@brandner2022].

In glioblastoma, CNVs impacting chromosomes 7 and 10 are common, with @stichel2018 finding that  81% of glioblastoma samples had concurrent gains of chromosome 7 and losses of 10. 
This common co-occurence could be an evolutionary mechanism where increased dosage of genes on chromosome 7 counteracts the reduced dosage of genes on chromosome 10 [@nair2024].

### Malignant melanoma

In skin cancer, chromosome-level CNVs can be used to differentiate between benign nevi and malignant melanomas. 
@gerami2009 demonstrated that a panel of FISH probes targeting chromosome 6p, 6q and 11q allowed efficient identification of malignant melanoma. 
Melanomas are often observed to have a simultaneous gain of 6p with a loss of 6q [@ferrara2016].

### Renal cell carcinoma

Specific gains and losses of chromosomal regions are associated with subtypes of
renal cancer.
The deletion of chromosome 3p characterises renal cell carcinoma [@chen2009; @liu2020], whilst gains of chromosomes 7 and 17 are more commonly seen in papillary renal cell carcinoma [@klatte2009].

## PanSolid enrichment

```{r}
#| label: enrichment-targets
#| include: FALSE

target_df <- read_csv(paste0(config::get("data_folderpath"),
                             "validation/DOC6283_amplifications/bed_files/",
                             "PanSolidv2_GRCh38_noalt_BED.csv")) |> 
  clean_names() |> 
  mutate(chromosome_fct = factor(chromosome,
                                levels  = c(seq(1:22), "X")))

target_df_coordinates <- target_df |> 
  extract_pansolid_cnv_coordinates(cnv_coord_col = region) |> 
  mutate(chromosome_char = as.character(chromosome_fct)) |> 
  add_chromosome_arms()

target_chr_arm_summary <- target_df_coordinates |> 
  filter(!is.na(chromosome_arm)) |> 
  group_by(chromosome_fct, chromosome_arm) |> 
  summarise(min_coord = min(start),
            max_coord = max(end)) |> 
  mutate(target_span = max_coord - min_coord) |> 
  left_join(chr_coords_grch38,
            join_by("chromosome_arm" == "chrom_arm")) |> 
  mutate(target_percent = (target_span / length)*100,
         p_or_q = str_extract(string = chromosome_arm,
                              pattern = "p|q"))
  
targets_per_chromosome <- target_df_coordinates |> 
  filter(!is.na(chromosome_arm)) |> 
  group_by(chromosome_fct, chromosome_arm) |> 
  count() |> 
  mutate(p_or_q = str_extract(string = chromosome_arm,
                              pattern = "p|q"))

```

There are `r nrow(target_df)` targets on the PanSolid enrichment which are spread across all autosomes and the X chromosome.
1q, 9q and 16q

```{r}
#| label: fig-targets-per-chromosome
#| echo: FALSE

fig_targets_per_chromosome <- ggplot(targets_per_chromosome, 
                                     aes(x = chromosome_fct, y = n)) +
  geom_col(aes(fill = p_or_q),
           colour = "black") +
  scale_fill_manual(values = c("#99CCFF", "#3399FF")) +
  theme_bw() +
  labs(x = "Chromosome", y = "Number of targets",
       title = "Distribution of targets on PanSolid enrichment",
       fill = "")

fig_targets_per_chromosome

```

```{r}
#| label: fig-target-chr-percent
#| echo: FALSE

fig_target_chr_percent <- ggplot(target_chr_arm_summary, 
                                 aes(x = chromosome_fct, y = target_percent)) +
  geom_col(position = "dodge", 
           colour = "black",
           aes(fill = p_or_q)) +
  scale_fill_manual(values = c("#99CCFF", "#3399FF")) +
  facet_wrap(~p_or_q, ncol = 1) +
  theme_bw() +
  labs(fill = "",
       x = "Chromosome",
       y = "Percentage covered by PanSolid targets")

fig_target_chr_percent

```

## Requirements and Performance Specification

The requirements for this new method are as follows:

-   The test must have a clear visual presentation of results
-   The test must provide a quantitative result for whether a chromosome
    or chromosome arm is impacted by a gain or loss.
-   The combined analysis of the PanSolid CLC pipeline with manual
    review by a clinical scientist should sensitivity and specificity
    values above 90% when compared with orthogonal testing.
-   The test must have clear quality metric thresholds for deciding
    sample quality

# Methods

## Samples

```{r}
#| label: load-cohort
#| include: FALSE

val_cohort <- read_excel(path = paste0(config::get("data_folderpath"),
                                       "validation/DOC6791_chromosome_arms/",
                                       "chromosome_arm_validation_cohort.xlsx"))
```

A cohort of 
`r length(unique(val_cohort$pansolid_labno))`
different samples was assembled for this validation.

## Next generation sequencing

Next generation sequencing on the PanSolid v2 enrichment was performed
for all samples.

## PanSolid CLC bioinformatics pipeline

The PanSolid CNV pipeline was built in CLC Genomics Workbench and has been described in previous validation documents. 
[DOC6283]{custom-style="Strong"} gives an overview of the pipeline, and [DOC6567]{custom-style="Strong"} includes further details of the ploidy caller which are relevant to this validation.
Briefly, the ploidy caller assigns a ploidy state to a particular target region based on its dosage and SNP frequency profile.

### Visualisation and quantification

The outputs of the PanSolid CNV pipeline are visualised at the whole-genome level via interactive plots, which were generated using the plotly package by Elizabeth Sollars and implemented during the validation of deletion and loss of heterozygosity detection (DOC6567).
In addition, scientists in the somatic cancer team requested an quantitative way of alerting them when a CNV impacting a whole chromosome arm or arms was present, such as the 1p19q co-deletion.
The ploidy state regions detected for each sample were processed via the following steps:

1.  Ploidy regions were loaded from the "Ploidy Regions" tab of the "Results_SNVs_Indels" Excel file in the "Unannotated_Files" folder of each worksheet.

2.  Each ploidy region was annotated with the chromosome arm that the region is on.

3.  The percentage of the entire chromosome arm that is covered by each ploidy state region was calculated.

6.  When any ploidy state, other that "Normal diploid", covered over a threshold percentage of the total chromosome arm, an automatic flag was added to the data.

```{r}
#| label: chr-arm-percent-threshold
#| include: FALSE

chr_arm_percent_threshold <- 75

```

The threshold for flagging a chromosome arm level CNV event was set at
`r chr_arm_percent_threshold`%.

## Orthogonal testing

### Karyotype analysis

Karyotype analysis was performed at the North West GLH (Liverpool site).

### Fluorescence In-Situ Hybridisation

Fluorescence In-Situ Hybridisation (FISH) analysis was performed at the
North West GLH (Liverpool site) using the Zytolight 1p36/1q25 and 19q13/19p13 dual
colour probes (ZytoVision). 
These probes target genomic regions which are several hundred kilobases in size on chromosome 1 and 19 (@tbl-fish-probe-coordinates). Whilst the FISH probe regions are within regions targetted by the PanSolid enrichment, there is no direct overlap between them ().

```{r}
#| label: fish-probe-locations
#| include: FALSE

fish_probes <- read_csv(paste0(config::get("data_folderpath"),
                               "validation/DOC6791_chromosome_arms/raw/fish/",
                               "fish_probe_locations.csv"))

fish_probes_mod <- fish_probes |> 
  mutate(size_kb_grch37 = round((end_grch37-start_grch37)/1000, 1),
         size_kb_grch38  =  round((end_grch38-start_grch38)/1000, 1))

```

```{r}
#| label: tbl-fish-probe-coordinates
#| tbl-cap: "Genomic coordinates of Zytolight FISH probes. Coordinates are
#| taken from the product datasheet and converted to GRCh38."
#| echo: FALSE

knitr::kable(fish_probes_mod |> 
               select(band, colour, start_grch38, 
                      end_grch38, size_kb_grch38) |> 
               rename(`Chromosome band` = band,
                      `Colour` = colour,
                      `Start` = start_grch38,
                      `End` = end_grch38,
                      `Size (kb)` = size_kb_grch38))

```

```{r}
#| label: fish-plot-function
#| include: FALSE

make_probe_target_plot <- function(chrom, x_start, x_end,
                                   plot_title, probe_colour) {
  
  target_plot <- target_df_coordinates |> 
    filter(chromosome == chrom) |> 
    mutate(y_axis = "Targets") |> 
    ggplot(aes(x = start, y = y_axis)) +
    geom_point(shape = 21) +
    theme_bw() +
    coord_cartesian(xlim = c(x_start, x_end)) +
    labs(x = "",
         y = "",
         title = plot_title)
  
  probe_plot <- fish_probes_mod |> 
    filter(chromosome == chrom) |> 
    mutate(y_axis = "FISH probes") |> 
    ggplot(aes(x = start_grch38, y = y_axis)) +
    geom_segment(aes(x = start_grch38, xend = end_grch38,
                     y = y_axis, yend = y_axis),
                 linewidth = 4,
                 colour = probe_colour) +
    theme_bw() +
    coord_cartesian(xlim = c(x_start, x_end)) +
    labs(x = "Genomic coordinate GRCh38",
         y = "")
  
  output_plotlist <- list(target_plot, probe_plot)
  
  return(output_plotlist)
  
}

```


```{r}
#| label: 1p-probe-targets
#| include: FALSE

chr1p_plot <- make_probe_target_plot(chrom = "1", x_start = 0, 
                       x_end = 10000000,
                       plot_title = "1p",
                       probe_colour = "#FF9900")

```

```{r}
#| label: 1q-probe-targets
#| include: FALSE

chr1q_plot <- make_probe_target_plot(chrom = "1", 
                       x_start = 180000000, 
                       x_end = 180000000+10000000,
                       plot_title = "1q",
                       probe_colour = "#66CC00")

```

```{r}
#| label: 19p-probe-targets
#| include: FALSE

chr19p_plot <- make_probe_target_plot(chrom = "19", 
                       x_start = 0, 
                       x_end = 10000000,
                       plot_title = "19p",
                       probe_colour = "#66CC00")

```

```{r}
#| label: 19q-probe-targets
#| include: FALSE

chr19q_plot <- make_probe_target_plot(chrom = "19", 
                       x_start = 48877821-5000000, 
                       x_end = 48877821+5000000,
                       plot_title = "19q",
                       probe_colour = "#FF9900")

```

```{r}
#| label: fig-fish-probe-pansolid-targets
#| echo: FALSE
#| fig-cap: "Location of FISH probes and PanSolid targets"
#| fig-height: 8

fig_fish_probe_pansolid_targets <- chr1p_plot[[1]] + chr19p_plot[[1]] +
  chr1p_plot[[2]] + chr19p_plot[[2]] + 
  chr1q_plot[[1]] + chr19q_plot[[1]] +
  chr1q_plot[[2]] + chr19q_plot[[2]] + 
  plot_layout(ncol = 2, nrow = 4)

fig_fish_probe_pansolid_targets

```

### Whole genome sequencing

Whole genome sequencing (WGS) was performed by Illumina Laboratory
Services in Cambridge. Further details are provided in
[DOC6567]{custom-style="Strong"}.

## Validation analysis

Analysis of the validation data was performed using the R programming language (4.4.1) [@rcore2024].
This validation document is rendered using Quarto [@allaire2024] and all code to reproduce this analysis is publicly available on Github:
[https://github.com/joe-m-shaw/pansolid-cnv/tree/main]()
All data analysed in this validation is saved at this file location:

Genetics/Mol_Shared/Development.Team/PanSolid CNV/data/validation/DOC6791_chromosome_arms

# Results

## Distribution of ploidy state regions

```{r}
#| label: cohort-data
#| include: FALSE

pansolid_unannotated_files <- list.files(paste0(config::get("data_folderpath"),
                 "validation/DOC6791_chromosome_arms/raw/pansolid_ngs/unannotated/"),
                 "Results_SNVs_Indels-.*.xlsx",
                 full.names = TRUE)

pansolid_ploidy_data <- pansolid_unannotated_files |> 
  map(\(pansolid_unannotated_files) 
      read_ploidy_sheet(filepath = pansolid_unannotated_files,
                        sheetname = get_sheetname(filepath = pansolid_unannotated_files,
                                                  sheet_regex = "Ploidy\\sRegion.*"))) |> 
  list_rbind()

gain_names <- c("(1,3)", "(0,4)", "(0,3)", "(2,4)", 
                "Whole genome duplication", "Duplication", 
                "(2,3)")

del_names <- c("Bi-allelic deletion", "Deletion")

pansolid_ploidy_data_long <- pansolid_ploidy_data |> 
  extract_pansolid_cnv_coordinates(cnv_coord_col = region) |> 
    format_chromosome_decimals() |> 
    factorise_chromosome() |> 
    add_chromosome_arms() |> 
    calculate_region_size() |> 
  mutate(name_group = case_when(
    name == "Normal diploid" ~"Normal diploid",
    name == "Uniparental disomy" ~"Uniparental disomy",
    name %in% gain_names ~"Gain",
    name %in% del_names ~"Deletion"
  ),
  name_group = factor(name_group, levels = c("Normal diploid",
                                             "Deletion",
                                             "Gain",
                                             "Uniparental disomy")))

stopifnot(anyNA(pansolid_ploidy_data_long$name) == FALSE)

```

The ploidy state results for 
`r length(unique(pansolid_ploidy_data$labno))`
samples were analysed by the chromosome arm quantification method. 
The overall distribution of results is shown in @fig-ploidy-state-histogram, which shows a clear sub-group of ploidy state calls where a single ploidy state call accounts for over 95% of the chromosome arm.
This indicates that the threshold of 
`r chr_arm_percent_threshold`% is an appropriate threshold for discriminating large chromosome events.

```{r}
#| label: fig-ploidy-state-histogram
#| echo: FALSE
#| warning: FALSE

pansolid_data_for_plot <- pansolid_ploidy_data_long |> 
  filter(name_group != "Normal diploid") |> 
  mutate(percent_chr_arm_round = round(percent_chr_arm, 1)) |> 
  filter(percent_chr_arm_round >= 1)

fig_ploidy_state_histogram <-  ggplot(pansolid_data_for_plot, 
                                      aes(x = percent_chr_arm_round, 
                                          y = )) +
  geom_histogram(binwidth = 2, aes(fill = name_group), colour = "black") +
  scale_fill_manual(values = c("blue", "green", "orange")) +
  geom_vline(xintercept = chr_arm_percent_threshold, linetype = "dashed") +
  scale_x_continuous(limits = c(0, 100),
                     breaks = seq(0, 100, by = 10)) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(x = "Percentage of chromosome arm covered by call",
       y = "Number of ploidy state calls",
       fill = "",
       title = paste0("Size distribution for ",
                      nrow(pansolid_data_for_plot),
                      " ploidy state calls in ",
                      length(unique(pansolid_ploidy_data_long$labno)),
                      " samples"),
       subtitle = "Normal diploid ploidy states removed. Bin size: 2%")

fig_ploidy_state_histogram

```


```{r}
#| label: tbl-region-size-distribution-75
#| tbl-cap: "Distribution "
#| echo: FALSE

region_size_distr_75 <- pansolid_ploidy_data_long |> 
  filter(name_group != "Normal diploid") |> 
  mutate(impact = case_when(
    percent_chr_arm >= 75 ~"Above 75% of arm",
    percent_chr_arm < 75 ~"Below 75% of arm")) |> 
  group_by(impact) |> 
  summarise(n = n()) |> 
  mutate(percent = round((n/sum(n))*100, 1)) |> 
  janitor::adorn_totals()

knitr::kable(region_size_distr_75)

```

```{r}
#| label: tbl-region-size-distribution-90
#| tbl-cap: "Distribution "
#| echo: FALSE

region_size_distr_90 <- pansolid_ploidy_data_long |> 
  filter(name_group != "Normal diploid") |> 
  mutate(impact = case_when(
    percent_chr_arm >= 90 ~"Above 90% of arm",
    percent_chr_arm < 90 ~"Below 90% of arm")) |> 
  group_by(impact) |> 
  summarise(n = n()) |> 
  mutate(percent = round((n/sum(n))*100, 1)) |> 
  janitor::adorn_totals()

knitr::kable(region_size_distr_90)

```

The `r chr_arm_percent_threshold`% threshold was used to flag when a chromosome arm was impacted by a large CNV event. 

```{r}
#| label: analyse-ploidy-data
#| include: FALSE

pansolid_ploidy_results <- pansolid_ploidy_data |>
  extract_pansolid_cnv_coordinates(cnv_coord_col = region) |> 
  format_chromosome_decimals() |> 
  factorise_chromosome() |> 
  add_chromosome_arms() |> 
  calculate_region_size() |> 
  add_chr_result_flag(percent_threshold = chr_arm_percent_threshold) |> 
  format_arm_ploidy_tbl()
  
```

{{< pagebreak >}}

## Comparison to 1p19q FISH

```{r}
#| label: fish-comparison
#| include: FALSE

fish_results <- read_excel(path = paste0(config::get("data_folderpath"),
                 "validation/DOC6791_chromosome_arms/raw/fish/",
                 "fish_result_summary.xlsx"),
                 col_types = c("text", "text", "text", "text")) |> 
  pivot_longer(cols = c("1p", "19q"),
               names_to = "chromosome_arm",
               values_to = "fish_result")

val_1p19q <- pansolid_ploidy_results |> 
  filter(chromosome_arm %in% c("1p", "19q")) |> 
  mutate(labno = str_extract(string = labno_suffix_worksheet,
                             pattern = "(\\d{8})_WS\\d{6}",
                             group =1)) |> 
  select(labno_suffix_worksheet, labno,
         chromosome_arm, result_flag, full_string) |> 
  arrange(labno_suffix_worksheet, desc(chromosome_arm)) |> 
  inner_join(fish_results,
            join_by("labno" == "pansolid_labno",
                    "chromosome_arm" == "chromosome_arm")) |> 
  select(name, labno, chromosome_arm, result_flag, fish_result,
         full_string)

```

8 results are in agreement between the two methods.

For 3 results, FISH reports a 19q deletion whilst PanSolid shows terminal 19q deletions with less than `r chr_arm_percent_threshold`% of 19q deleted.
This presumably is a false positive result on FISH.

One result does not agree because 1p and 19q are a mixture of LOH and deletion calls on PanSolid.

## Comparison to whole genome sequencing

### 1q19p gain: sample 23001331

Sample 23001331 was tested. 
A 1p19q codeletion was detected on the previous CNV detection method 
([DOC4914]{custom-style="Strong"}) (report reference: 23001331.123).
No 1p19q codeletion was detected on WGS (R25-0YP8-1), however gains were noted on 1q and 19p.
The same gains were noted on PanSolid.

### Gain of 7 and loss of 10

```{r}
#| label: fig-plus-7-minus-10
#| include: FALSE

plus7_loss10_samples <- c("25024755_WS152973", 
                          "25029510_WS153752",
                          "25032698_WS154250")

x <- pansolid_ploidy_results |> 
  filter(labno_suffix_worksheet %in% plus7_loss10_samples &
           chromosome_arm %in% c("7p", "7q",
                                 "10p", "10q")) 

```

## Comparison to G-band karyotype

```{r}
#| label: karyotype-samples
#| include: FALSE

karyotype_samples <- read_excel(path = paste0(config::get("data_folderpath"),
                                              "validation/DOC6791_chromosome_arms/",
                                              "karyotype_samples_to_test.xlsx")) |> 
  janitor::clean_names()

```

5 samples with known hyperdiploid or hypodiploid karyotypes from G-banding analysis were tested on PanSolid NGS.

```{r}
#| label: tbl-karyotype-samples
#| tbl-cap: "Samples with karyotype results"
#| include: FALSE

karyotype_tbl <- karyotype_samples |> 
  select(sample_id, folder_name, karyotype) |> 
  rename(`Lab number` = sample_id,
         `Karyotype number` = folder_name,
         `Karyotype` = karyotype)

knitr::kable(karyotype_tbl)

```

```{r}
#| label: fish-case-images
#| include: FALSE

image_folderpath <- paste0(config::get("data_folderpath"),
                           "validation/DOC6791_chromosome_arms/images/")

path_fish_24062890 <- paste0(image_folderpath, "fish_sample_24062890.png")

path_fish_25018186 <- paste0(image_folderpath, "fish_sample_25018186.png")

path_fish_24027676 <- paste0(image_folderpath, "fish_sample_24027676.png")

path_fish_24057973 <- paste0(image_folderpath, "fish_sample_24057973.png")

path_fish_24038436 <- paste0(image_folderpath, "fish_sample_24038436.png")

```

{{< pagebreak >}}

![Sample 24062890](`r path_fish_24062890`){#fig-fish-24062890 width=6in}

{{< pagebreak >}}

![Sample 25018186](`r path_fish_25018186`){#fig-fish-25018186 width=6in}

{{< pagebreak >}}

![Sample 24027676](`r path_fish_24027676`){#fig-fish-24027676 width=6in}

{{< pagebreak >}}

![Sample 24057973](`r path_fish_24057973`){#fig-fish-24057973 width=6in}

{{< pagebreak >}}

![Sample 24038436](`r path_fish_24038436`){#fig-fish-24038436 width=6in}

{{< pagebreak >}}

## Repeat testing

3 DNA samples from Schwannoma tumours (24018518, 24045597 and 24054282)
were tested on 3 different worksheets to assess the impact of repeat
variation. These were the same DNA samples used for the validation of
detection of deletions ([DOC6567]{custom-style="Strong"}).

### Uncertainty of measurement

## Quality control

## Limit of detection

# Discussion

This new method is an improvement on the previous NGS detection method for 1p19q, as it does not rely on normalising dosage to a single chromosome arm.
This is demonstrated by 23001331.

The ability of the pipeline to detect CNVs is influenced by target density, which is not uniform throughout the genome.

## Limitations

Bone marrow samples were tested because only bone marrow samples get karyotyping. Karyotyped samples from FFPE blocks were not available.

The quantification of chromosome arm percent will not sum to 100%, because the PanSolid enrichment does not cover the entire breadth of every chromosome arm.

Summing ploidy state regions across a chromosome arm can merge regions with separate biological causes. If a chromosome arm has multiple independent deleted regions, these will be summed to give the impression that a single deletion is impacting the chromosome arm.

## Extrapolation to other copy number variants

This validation has focussed on a discrete list of chromosome-level
CNVs. The sensitivity and specificity of the PanSolid pipeline for
detecting the chromosome level CNVs within the validation data can be
extrapolated to all chromosome level CNVs, provided that the CNV has a
size greater than X Megabases.

# Review of Test Requirements

# Requirements for Clinical Implementation

# Conclusion

# References

::: {#refs}
:::
