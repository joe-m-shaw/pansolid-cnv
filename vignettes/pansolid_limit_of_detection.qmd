---
title: "PanSolid Copy Number Variant Limit of Detection Experiment"
author: "Joe Shaw, Clinical Scientist (CS20980)"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

Code to produce this document is available on [GitHub](https://github.com/joeshaw824/pansolid_cnv_validation).

# Background

This is a limit of detection experiment using SeraCare reference materials to test the sensitivity of the PanSolid pipeline for detecting copy number variants at low neoplastic cell contents (NCC).

A previous limit of detection experiment was performed on 01/03/2024, with DNA mixes representing 25%, 12.5%, 6.25% and 0% NCC. This was due to the limited volumes of SeraCare reference materials available.

The aim of this new experiment is to end up with 4 mixes, each representing NCC samples (30%, 20%, 10% and 0%). This should harmonise the limit of detection for amplifications with the limit of detection for single nucleotide variants, which is currently 20%.

Each mix will have the same total DNA input as a standard clinical sample:

-   20 ul of 6ng/ul DNA
-   `r round(20*6, 0)`ng DNA
-   `r round(((20*6)*1000) / 3.3, 0)` haploid genome copies (1 haploid human genome weighs 3.3 picograms)

Of this, the following amounts are taken as the input into the fragmentation, end-repair and A-addition reaction:

-   16.75ul
-   `r round(16.75*6, 1)` ng
-   `r round(((16.75*6)*1000) / 3.3, 0)` haploid genome copies

{{< pagebreak >}}

## Samples

The "tumour" sample is the Seraseq速 Solid Tumor CNV Mix (+12 copies of 12 genes).

The "normal" sample is the Seraseq速 DNA WT Mix (no additional gene copies).

The documentation for the Seraseq速 Solid Tumor CNV Mix and the Seraseq速 DNA WT Mix state that the DNA concentrations are 10.9 ng/ul and 28.8 ng/ul, respectively, when measured with the Qubit dsDNA Broad Range assay.

I measured each control using the Qubit dsDNA Broad Range assay in the lab and the DNA concentrations were 7.28 ng/ul and 22.4 ng/ul.

I will use my Qubit measurements from the laboratory's Qubits because this is how clinical samples will be measured.

In the previous limit of detection I used the Qubit values provided by SeraCare, which may have led to an over-estimation of the limit of detection.

```{r}
#| label: sample-volumes
#| include: TRUE
#| message: FALSE
#| warning: FALSE

library(here)
library(tidyverse)
source(here("scripts/set_shared_drive_filepath.R"))

tumour_stock_vol <- 20

tumour_stock_conc <- 7.28

norm_stock_vol <- 20

norm_stock_conc <- 22.4

tumour_total_ng <- tumour_stock_vol * tumour_stock_conc

norm_total_ng <- norm_stock_vol * norm_stock_conc

```

{{< pagebreak >}}

# Calculations

```{r}
#| label: calculations
#| include: TRUE
#| message: FALSE

total_c2 <- 6

total_v2 <- 20

total_ng <- total_c2 * total_v2

tumour_additional_copies <- 12

df <- data.frame("target_tumour_percent" = c(30, 20, 10, 0),
                 "tumour_c1" = c(
                   # 30% NCC
                   tumour_stock_conc * 0.5, 
                   # 20% NCC
                   tumour_stock_conc * 0.5, 
                   # 10% NCC
                   tumour_stock_conc * 0.5,
                   # 0% NCC
                   0),
                 "norm_c1" = c(
                   # 30% NCC
                   norm_stock_conc * 0.5, 
                   # 20% NCC
                   norm_stock_conc * 0.5, 
                   # 10% NCC
                   norm_stock_conc * 0.5,
                   # 0% NCC
                   norm_stock_conc * 0.5))

lod_calculations <- df |> 
  mutate(
    
    target_norm_percent = 100-target_tumour_percent,
    
    # Calculate nanograms required of each sample (normal and tumour)
    
    tumour_ng = round(total_ng * (target_tumour_percent / 100), 1),
    
    norm_ng = round(total_ng * (target_norm_percent / 100), 1),
    
    total_ng = tumour_ng + norm_ng,
    
    # Calculate number of genome equivalents (GE) 
    # 1 haploid human genome is 3.3 picograms
    
    tumour_ge = round((tumour_ng * 1000) / 3.3, 1),
    
    norm_ge = round((norm_ng * 1000) / 3.3, 1),
    
    total_ge = tumour_ge + norm_ge,
    
    # Calculate the starting volumes (v1) of each sample
    
    tumour_v1 = ifelse(tumour_ng == 0, 0, round(tumour_ng / tumour_c1, 1)),
    
    norm_v1 = ifelse(norm_ng == 0, 0, round(norm_ng / norm_c1, 1)),
    
    # Calculate the water volume required
    
    water_v1 = total_v2 - (tumour_v1 + norm_v1),
    
    final_v2 = water_v1 + tumour_v1 + norm_v1,
    
    final_c2 = round(((tumour_v1*tumour_c1) + (norm_v1*norm_c1)) / final_v2,0),
    
    # Calculate the additional number of copies in each mix
    
    norm_copies = round((target_norm_percent / 100) * 2,2),
    
    tumour_copies = round((target_tumour_percent / 100) * (tumour_additional_copies + 2),2),
    
    total_copies = round((norm_copies + tumour_copies),2),
    
    total_additional_copies = total_copies - 2,
    
    expected_fold_change = total_copies / 2
    
    )

# Check that we have enough of each control

sum(lod_calculations$tumour_ng) < tumour_total_ng

sum(lod_calculations$norm_ng) < norm_total_ng

lod_table <- lod_calculations |> 
  select(target_tumour_percent, tumour_c1, tumour_v1, tumour_ng,
         norm_c1, norm_v1, water_v1, 
         final_v2, final_c2) |> 
  rename("Target tumour %" = target_tumour_percent)
  
knitr::kable(lod_table)

```

```{r}
#| label: export-results
#| include: FALSE

write.csv(lod_calculations, file = paste0(outputs_folder, "lod_calculations.csv"),
          row.names = FALSE)

```

{{< pagebreak >}}

# Lab Work

I performed the lab work for this experiment on 08/08/2024 (WS144265).
