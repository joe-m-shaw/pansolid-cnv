---
title: "Fold change threshold"
author: "Joe Shaw (CS20980)"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---


```{r}
#| label: packages-and-functions
#| include: FALSE

library(here)
library(tidyverse)
library(readxl)
library(epiR)
library(janitor)

source(here("functions/pansolid_excel_functions.R"))
source(here("scripts/load_processed_live_service_data.R"))

```

```{r}
#| label: folders-and-filepaths

bio_cnv_folder <- "S:/central shared/Genetics/NGS/Bioinformatics/1_Pan-solid-Cancer/CNV/Deletions/"

del_files <- list.files(path = bio_cnv_folder,
                        recursive = FALSE,
                        full.names = TRUE,
                        pattern  = "TSG\\s\\(Deleted\\).*.xlsx")

data_folder <- config::get("data_filepath")

```

```{r}
#| label: data
#| include: FALSE

del_genes <- read_excel(paste0(data_folder,
                      "/validation/DOC6567_deletions/gene_lists/",
                      "2024_12_20_deletion_gene_list.xlsx")) |> 
  janitor::clean_names() |> 
  select(priority, gene)

del_results_all_targets <- read_csv(paste0(data_folder,
                "validation/DOC6567_deletions/processed/",
                "del_val_pansolid_targets_collated.csv"))

gene_mapping <- read_csv(paste0(data_folder,
                      "/validation/DOC6567_deletions/gene_lists/",
                      "gene_mapping.csv"))

if(length(setdiff(unique(gene_mapping$gene), del_genes$gene)) != 0){
  stop("Gene lists don't match")
}

target_bed_df <- read_csv(paste0(data_folder,
                             "validation/DOC6283_amplifications/bed_files/",
                             "PanSolidv2_GRCh38_noalt_BED.csv")) |> 
  clean_names() |> 
  mutate(target_type = case_when(
    
    grepl(x = name, 
          pattern =  "chr(\\d{1,2}|X):\\d{1,3}.+") == TRUE ~"genomic backbone",
    TRUE ~"gene target"
  ))

gene_target_counts <- target_bed_df |> 
  filter(name %in% del_genes$gene) |> 
  count(name) |>
  mutate(clc_setting = case_when(
    n < 10 ~"fine",
    n >= 10 ~"coarse"
  ))

coarse_genes <- gene_target_counts |> 
  filter(clc_setting == "coarse")

fine_genes <- gene_target_counts |> 
  filter(clc_setting == "fine")

patient_info <- read_csv(file = paste0(data_folder,
                                       "validation/DOC6567_deletions/",
                                       "processed/",
                                       "del_val_sample_patient_info.csv")) |> 
  mutate(labno = as.character(labno),
         nhsno = as.character(nhsno))

del_val_wgs_html_ids <- read_csv(paste0(data_folder,
                                        "validation/DOC6567_deletions/",
                                        "processed/",
                                        "del_val_wgs_html_ids.csv")) |>
  mutate(wgs_tumour_content = as.numeric(str_extract(
    string = calculated_tumour_content,
    pattern = "(\\d{2}.\\d{1})",
    group = 1))) 

stopifnot(any(duplicated(del_val_wgs_html_ids$nhsno)) == FALSE)

del_val_wgs_html_cnvs <- read_csv(paste0(data_folder,
                                        "validation/DOC6567_deletions/",
                                        "processed/",
                                        "del_val_wgs_html_cnvs.csv"))

gene_chromosomes <- del_val_wgs_html_cnvs |> 
  filter(gene %in% del_genes$gene) |> 
  select(chromosome, gene) |> 
  distinct() |> 
  mutate(chromosome = factor(x = as.character(chromosome),
                             levels = c("1", "2", "3", "4",
                                               "5",  "6",  "7",  "8",
                                               "9",  "10", "11", "12",
                                               "13", "14", "15", "16",
                                               "17", "18", "19", "20",
                                               "21", "22", "X", "Y")))


```


## Data processing



```{r}
#| label: data-comparison
#| include: FALSE

del_results_all_targets_filter <- del_results_all_targets |> 
  # Get all the targets for the relevant genes
  # Some genes have multiple target name-strings
  left_join(gene_mapping, by = "name") |> 
  filter(!is.na(gene)) |> 
  filter((tab == "Coarse Targets" & gene %in% coarse_genes$name) |
           (tab == "Fine Targets" & gene %in% fine_genes$name)) |> 
  group_by(filepath, labno_suffix_worksheet, gene) |> 
  summarise(min_fold_change = min(regional_fold_change)) |> 
  mutate(labno = str_extract(string = labno_suffix_worksheet,
                             pattern = "\\d{8}")) |> 
  left_join(patient_info |> 
              select(labno, nhsno, pathno), by = "labno") |> 
  rename(pansolid_pathno = pathno)

stopifnot(length(del_files) * length(del_genes$gene) ==
            nrow(del_results_all_targets_filter))

results_without_nhsno <- del_results_all_targets_filter |> 
  filter(is.na(nhsno))

print(paste0("This sample has no NHS number:",
             unique(results_without_nhsno$labno)))

wgs_cnvs_with_nhsnos <- del_val_wgs_html_cnvs |> 
  left_join(del_val_wgs_html_ids |> 
              select(filepath, nhsno), 
            by = "filepath", relationship = "many-to-one") |> 
  mutate(nhsno = as.character(nhsno))

wgs_del_results <- wgs_cnvs_with_nhsnos |> 
  filter(cnv_class %in% c("DEL", "LOSS")) |> 
  filter(gene %in% del_genes$gene) |> 
  distinct(nhsno, gene, .keep_all = TRUE) 

good_quality_coverage <- live_service_percent_138_results_collated |> 
           filter(percent_whole_panel_covered_at_138x >= 75)

good_quality_noise <- live_service_std_dev_results_collated |> 
  filter(st_dev_signal_adjusted_log2_ratios <= 0.7)

samples_with_wgs_results <- del_results_all_targets_filter |> 
  filter(nhsno %in% wgs_cnvs_with_nhsnos$nhsno &
           labno %in% good_quality_coverage$labno &
           labno %in% good_quality_noise$labno)

stopifnot(length(unique(samples_with_wgs_results$filepath)) * 
            length(del_genes$gene) ==
  nrow(samples_with_wgs_results))
  
pansolid_vs_wgs <- samples_with_wgs_results |> 
  left_join(wgs_del_results |> 
              select(-chromosome), join_by("nhsno" == "nhsno",
                                     "gene" == "gene")) |> 
  mutate(wgs_result = case_when(
    is.na(cnv_class) ~"assumed normal",
    TRUE ~cnv_class
  )) |> 
  left_join(
    del_val_wgs_html_ids |> 
      select(nhsno, wgs_r_no, wgs_p_no, patient_name,
             wgs_pathno, calculated_overall_ploidy, wgs_tumour_content) |> 
      mutate(nhsno= as.character(nhsno)),
    by = "nhsno") |> 
  left_join(gene_chromosomes,
            by = "gene",
            relationship = "many-to-one")
  
wgs_samples_high_ncc <- del_val_wgs_html_ids |> 
  filter(wgs_tumour_content >= 50)

wgs_samples_not_high_ploidy <- del_val_wgs_html_ids |> 
  filter(calculated_overall_ploidy < 2.5)

```

```{r}


compare_pansolid_vs_wgs <- function(df = pansolid_vs_wgs, 
                                    fold_change_threshold) {
  
  pansolid_vs_wgs_mod <- df |> 
    mutate(pansolid_result = case_when(
      min_fold_change <= fold_change_threshold ~"deletion",
      min_fold_change > fold_change_threshold ~"normal"),
    outcome = case_when(
      pansolid_result == "deletion" & 
        wgs_result %in% c("DEL", "LOSS") ~"true_pos",
      pansolid_result == "normal" & 
        wgs_result == "assumed normal" ~"true_neg",
      pansolid_result == "deletion" & 
        wgs_result == "assumed normal" ~"false_pos",
      pansolid_result == "normal" & 
        wgs_result %in% c("DEL", "LOSS") ~"false_neg",
    ),
    outcome = factor(outcome, levels = c("true_pos",
                                         "true_neg",
                                         "false_pos",
                                         "false_neg")))

  pansolid_vs_wgs_summary <- pansolid_vs_wgs_mod |> 
    ungroup() |> 
    count(outcome, .drop = FALSE) |> 
    pivot_wider(names_from = outcome,
                values_from = n,
                values_fill = 0) |> 
    mutate(all = sum(true_pos + false_pos + false_neg + true_neg))
  
  pansolid_vs_wgs_epir <- epiR::epi.tests(c(pansolid_vs_wgs_summary$true_pos, 
                    pansolid_vs_wgs_summary$false_pos, 
                    pansolid_vs_wgs_summary$false_neg,
                    pansolid_vs_wgs_summary$true_neg))

  pansolid_vs_wgs_metrics <- pansolid_vs_wgs_epir$detail |> 
    filter(statistic %in% c("se", "sp")) |> 
    pivot_wider(names_from = "statistic",
                values_from = -statistic) |> 
    mutate(sensitivity = paste0(round(est_se * 100, 2), "%",
                                " (", 
                                round(lower_se * 100, 2),
                                "-",
                                round(upper_se * 100, 2), 
                                ")"),
           specificity = paste0(round(est_sp * 100, 2), "%",
                                " (", 
                                round(lower_sp * 100, 2),
                                "-",
                                round(upper_sp * 100, 2), 
                                ")")) |>  
    select(specificity, sensitivity)

  output <- cbind(pansolid_vs_wgs_summary, pansolid_vs_wgs_metrics) |>  
    mutate(fold_change_threshold = fold_change_threshold) |> 
    relocate(fold_change_threshold)
  
  return(output)
  
}

comp_high_ncc <- pansolid_vs_wgs |> 
    filter(nhsno %in% wgs_samples_high_ncc$nhsno)

comp_not_high_ploidy <- comp_high_ncc |> 
  filter(nhsno %in% wgs_samples_not_high_ploidy$nhsno)

high_ncc_tbl <- rbind(
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.3333),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.3),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.25),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.2),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.15),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.1),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.05),
  compare_pansolid_vs_wgs(df = comp_high_ncc,
    fold_change_threshold = -1.)) |> 
  mutate(note = "Samples with NCC above 50%") |> 
  relocate(note)

diploid_tbl <- rbind(
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.3333),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.3),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.25),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.2),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.15),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.1),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.05),
  compare_pansolid_vs_wgs(df = comp_not_high_ploidy,
    fold_change_threshold = -1.)) |> 
  mutate(note = "Samples with NCC above 50% and ploidy below 2.5") |> 
  relocate(note)

rbind(high_ncc_tbl, diploid_tbl) |>  view()

comp_cdkn2a <- comp_not_high_ploidy |> 
  filter(gene == "CDKN2A")

cdkn2a_tbl <- rbind(
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.3333),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.3),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.25),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.2),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.15),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.1),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.05),
  compare_pansolid_vs_wgs(df = comp_cdkn2a,
    fold_change_threshold = -1.)) |> 
  mutate(note = "CDKN2A only") |> 
  relocate(note)

```


```{r}
#| echo: FALSE

inter_run_replicates <- c(
  # 24017319
  "24017319_WS141734", "24017319a_WS144291", "24017319_WS144364",
  # 24027774
  "24027774_WS142076", "24027774a_WS144291", "24027774_WS144364",
  # 24020998
  "24020998_WS141045", "24020998a_WS144291", "24020998_WS144364")

intra_run_replicates <- c(
  # 24017319
  "24017319a_WS144291", "24017319b_WS144291", "24017319c_WS144291",
  # 24027774
  "24027774a_WS144291", "24027774b_WS144291", "24027774c_WS144291",
  # 24020998
  "24020998a_WS144291", "24020998b_WS144291", "24020998c_WS144291"
)

threshold <- -1.3

plot_24017319 <- del_results_all_targets_filter |> 
  filter(labno_suffix_worksheet %in% inter_run_replicates |
           labno_suffix_worksheet %in% intra_run_replicates) |> 
  filter(labno == "24017319") |> 
  mutate(call = case_when(
    min_fold_change <= threshold ~"del",
    min_fold_change > threshold ~"normal")) |> 
  ggplot(aes(x = labno_suffix_worksheet,
             y = min_fold_change)) +
  geom_point(shape = 21, aes(fill = call)) +
  facet_wrap(~gene) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        legend.position = "bottom") +
  geom_hline(yintercept = threshold, linetype = "dashed")

plot_24027774 <- del_results_all_targets_filter |> 
  filter(labno_suffix_worksheet %in% inter_run_replicates |
           labno_suffix_worksheet %in% intra_run_replicates) |> 
  filter(labno == "24027774") |> 
  mutate(call = case_when(
    min_fold_change <= threshold ~"del",
    min_fold_change > threshold ~"normal")) |> 
  ggplot(aes(x = labno_suffix_worksheet,
             y = min_fold_change)) +
  geom_point(shape = 21, aes(fill = call)) +
  facet_wrap(~gene) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        legend.position = "bottom") +
  geom_hline(yintercept = threshold, linetype = "dashed")

plot_24020998 <- del_results_all_targets_filter |> 
  filter(labno_suffix_worksheet %in% inter_run_replicates |
           labno_suffix_worksheet %in% intra_run_replicates) |> 
  filter(labno == "24020998") |> 
  mutate(call = case_when(
    min_fold_change <= threshold ~"del",
    min_fold_change > threshold ~"normal")) |> 
  ggplot(aes(x = labno_suffix_worksheet,
             y = min_fold_change)) +
  geom_point(shape = 21, aes(fill = call)) +
  facet_wrap(~gene) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        legend.position = "bottom") +
  geom_hline(yintercept = threshold, linetype = "dashed")

plot_24017319

plot_24027774

plot_24020998

```
