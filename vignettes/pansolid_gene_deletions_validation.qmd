---
title: "DOC6567: Validation of Detecting Deletions with the PanSolid CLC pipeline"
format: 
  docx:
    reference-doc: north_west_glh_document_template.docx
    link-citations: true
toc: true
toc-title: "Table of Contents"
bibliography: pansolid_cnv_references.bib
csl: harvard-manchester-metropolitan-university.csl
fig-align: "left"
---

{{< pagebreak >}}

# Authors

Author: Joe Shaw

Project Lead(s): Joe Shaw, Elizabeth Sollars, Eleanor Baker, Helene Schlecht, George Burghel

Date: `r Sys.Date()`

Author contact: joseph.shaw2\@mft.nhs.uk; joseph.shaw3\@nhs.net

# Acronyms

**APC**: adenomatous polyposis coli tumor suppressor

**CDKN2A**: Cyclin Dependent Kinase iNhibitor 2A

**CDKN2B**: Cyclin Dependent Kinase iNhibitor 2B

**CLC**: Acronym unknown. CLC Bio was acquired by Qiagen in 2013.

**CNV**: Copy Number Variant

**ddPCR**: droplet digital Polymerase Chain Reaction

**DNA**: DeoxyriboNucleic Acid

**FFPE**: Formalin-Fixed Paraffin Embedded

**FISH**: Fluorescent In-Situ Hybridisation

**GLH**: Genomic Laboratory Hub

**IHC**: Immuno-HistoChemistry

**LOH**: Loss Of Heterozygosity

**MMR**: MisMatch Repair

**NCC**: Neoplastic Cell Content

**NGS**: Next Generation Sequencing

**NHS**: National Health Service

**p14ARF**: protein 14 kilo Daltons Alternate Reading Frame

**p15INK4B**: protein 15 kilo Daltons Inhibitor of CDK4 B

**p16INK4A**: protein 16 kilo Daltons Inhibitor of CDK4 A

**PTEN**: Phosphatase and tensin homolog deleted on chromosome ten

**WGS**: Whole Genome Sequencing

**WHO**: World Health Organisation

```{r}
#| label: packages-and-functions
#| warning: FALSE
#| include: FALSE

library(tidyverse)
library(knitr)
library(here)
library(janitor)
library(readxl)
library(patchwork)

source(here("functions/gene_table_functions.R"))
source(here("functions/test_metric_functions.R"))
source(here("functions/extract_pansolid_cnv_coordinates.R"))

data_folder <- config::get("data_filepath")

```

```{r}
#| label: source-scripts
#| warning: FALSE
#| include: FALSE

#source(here("scripts/del_val_collate_wgs_htmls.R"))

#source(here("scripts/del_val_collate_ddpcr_csvs.R"))

# source(here("scripts/del_val_collate_pansolid_results.R"))

# source(here("scripts/del_val_get_patient_info.R"))

source(here("scripts/del_val_load_processed_data.R"))

```

```{r}
#| label: targets
#| include: FALSE
#| warning: FALSE

target_df <- read_csv(paste0(data_folder,
                             "bed_files/PanSolidv2_GRCh38_noalt_BED.csv")) |> 
  clean_names() |> 
  mutate(target_type = case_when(
    
    grepl(x = name, pattern =  "chr(\\d{1,2}|X):\\d{1,3}.+") == TRUE ~"genomic backbone",
    TRUE ~"gene target"
  ))

del_genes <- load_pansolid_gene_table("Deletions")

genes_in_validation <- c("CDKN2A", "CDKN2B", "PTEN", "TP53", "MLH1", "MSH2",
                         "MSH6", "NF2")

gene_target_counts <- target_df |> 
  filter(name %in% genes_in_validation) |> 
  count(name) |>
  mutate("Predicted CLC setting" = case_when(
    n < 10 ~"Fine",
    n >= 10 ~"Coarse"
  )) |> 
  rename("Number of targets" = n,
         "Gene" = name) 

```

{{< pagebreak >}}

# Purpose

The purpose of this document is to describe the validation of detection of somatic gene deletions on the PanSolid v2 QIAseq panel using the PanSolid CLC pipeline at the North West Genomic Laboratory Hub (GLH).

# Introduction

This validation is part of the continuing project to validate copy number variants (CNVs) on the PanSolid enrichment panel.

```{r}
#| label: tbl-previous-validations
#| tbl-cap: "Previous validations of the PanSolid enrichment and pipeline"
#| echo: FALSE

prev_validation_table <- tribble(
  ~`Description`, ~`Document number`, ~`Date`,
  "Detection of single nucleotide variants and indel variants", "DOC6024", "July 2023",
  "Verification of PanSolid enrichment version 2", "", "April 2024",
  "Detection of amplifications in *ERBB2*", "DOC6260", "April 2024",
  "Detection of amplifications in 8 additional genes", "DOC6283", "November 2024"
)

kable(prev_validation_table)

```

{{< pagebreak >}}

The aim of this validation is to detect deletions in `r length(del_genes$gene)` genes on the PanSolid enrichment (@tbl-deletion-gene-targets).

```{r}
#| label: tbl-deletion-gene-targets
#| tbl-cap: "Genes on the deletion list"
#| echo: FALSE

kable(gene_target_counts)

```

## Gene deletions and tumour suppressor genes

Tumour suppressor genes can be deleted, giving rise to cancer. A patient may have a germline deletion of the gene which predisposes them to cancer. Traditionally, FISH testing was used to identify gene deletions.

### *CDKN2A* and *CDKN2B*

*CDKN2A* and *CDKN2B* are adjacent to each other on chromosome 9, separated by roughly 20kb.

The p14ARF protein product of *CDKN2A* plays an important role in cell growth regulation, and deletion of *CDKN2A* can contribute to tumour proliferation [@appay2019].

Homozygous deletion is associated poor prognosis in meningiomas [@sievers2020] and astrocytomas [@yuile2023].

Homozygous *CDKN2A/B* deletion is included in the fifth edition of the World Health Organisation Classification of Tumours of the Central Nervous System [@louis2021]. 

Germline *CDKN2A* mutations increase predisposition to melanoma [@toussi2020]. A single publication links germline mutations in *CDKN2B* to renal cell carcinoma (Jafri et al (2015)). Germline deletions of both *CDKN2A* and *CDKN2B* have been reported (Jensen et al (2022)). 

Vieler at al (2023) used optical genome mapping to characterise CDKN2/B deletions in acute lymphoblastic leukaemia, showing deletions varied between 24 kilobases to 34 Megabases. Abdulaziz et al (2019) analysed *CDKN2A* deletions on the COSMIC database and reported a median deletion length of 1.2Mb.

Due to their proximity, *CDKN2A* and *CDKN2B* are normally deleted together, however there are less common cases where only one gene is deleted. For example, Gonz√°lez-Gil et al (2021) reported that in 20% of acute lymphoblastic leukaemia only one of *CDKN2A* or *CDKN2B* was lost.

### *PTEN*

*PTEN* is deleted in many different cancer types [@alvarezgarcia2019].

Germline mutations in *PTEN* cause PTEN hamartoma tumor syndrome [@yehia2020]. Germline deletions in PTEN can either encompass the whole gene or include only certain exons [@zhou2003]. 

### *TP53*


### *NF2*


### Mismatch repair genes: *MLH1*, *MSH2* and *MSH6*


## Loss of heterozygosity

Loss of heterozygosity (LOH) at mismatch repair (MMR) gene loci has been identified as a pathogenic mechanism in colorectal cancer (@melcher2007). This LOH is frequently copy-neutral, with the allele containing a pathogenic sequence variant being copied in the repair of the damaged wild-type allele. LOH in colorectal cancer may be identified using SNP arrays (@melcher2007, @melcher2011), PCR fragment analysis (@guerts-giele2014) and next generation sequencing.

## Requirements

The requirements for this new method are as follows:

1. **Results:** the test should provide clear results for the `r length(del_genes$gene)` deletion genes.

2. **Analytical validity:** the test should have a defined sensitivity and specificity for these genes, calculated by comparison with orthogonal methods.

3. **Dosage accuracy:** it should be show how accurate the test is at detecting heterozygous and homozygous deletions, in samples with varying neoplastic cell contents.

4 **Quality control:** the test should have clear quality control thresholds for deciding when the test results should be reported and when the test has failed.

5. **Variability:** the test should have defined intra-run variation (repeatability) and inter-run variability (reproducibility) for detection of deletions. Analysis of this variation should then be used to derive the uncertainty of measurement for the test.

6 **Visualisation:** the results should be presented in a clear and visual manner.

7 **Analysis:** there should be a clear procedure for analysis for gene deletions by laboratory staff.

{{< pagebreak >}}

# Methodology

## Samples

7 WGS samples from amplifications validation
10 WGS samples newly run
29 samples to be tested with ddPCR

## DNA extraction

## Next generation sequencing

## Bioinformatics Pipeline

A bioinformatics pipeline was built in the CLC Genomics Workbench v23 (Qiagen).

### Fold change {#sec-methods-fold-change}

$$
FCgain = CNsample / CNnormal
$$ {#eq-fold-change-gain}

$$
FCloss = - (CNnormal / CNsample)
$$ {#eq-fold-change-loss}

```{r}
#| label: fold-change
#| include: FALSE

ref_sample_copies <- 200

calculate_deletion_fold_change <- function(tcc_percent, sample_target_copies_per_tumour_cell) {
  
  tcc_fraction <- tcc_percent / 100
  
  sample_target_copies_in_tumour_cells <- (100 * tcc_fraction) * sample_target_copies_per_tumour_cell
  
  sample_target_copies_in_normal_cells <- (100 * (1-tcc_fraction)) * 2
  
  sample_total_target_copies <- sample_target_copies_in_tumour_cells + sample_target_copies_in_normal_cells
  
  fold_change <- -1 * (ref_sample_copies / sample_total_target_copies) 
  
  return(fold_change)
  
}

fold_change_df <- data.frame(ncc = seq(0, 100, by = 0.1)) |> 
  mutate(fold_change_normal = calculate_deletion_fold_change(
      tcc_percent = ncc,
      sample_target_copies_per_tumour_cell = 2),
    fold_change_het_del = calculate_deletion_fold_change(
      tcc_percent = ncc,
      sample_target_copies_per_tumour_cell = 1),
    fold_change_hom_del = calculate_deletion_fold_change(
       tcc_percent = ncc,
       sample_target_copies_per_tumour_cell = 0)) |> 
  pivot_longer(cols = -ncc,
               names_to = "del_state",
               values_to = "fold_change")

```

```{r}
#| label: fold-change-threshold
#| include: FALSE

deletion_fc_threshold <- calculate_deletion_fold_change(50, 1)

```

The threshold was set at `r round(deletion_fc_threshold,2)`, which is the fold change for a sample with a heterozygous deletion at 50% neoplastic cell content. This would be an overall copy number of 1.5.

```{r}
#| label: fold-change-plot
#| echo: FALSE

fold_change_plot <- ggplot(fold_change_df, aes(x = ncc, y = fold_change)) +
  geom_line(aes(colour = del_state), linewidth = 1) +
  scale_colour_manual(values = c( "#999999", "#999999", "#999999")) +
  coord_cartesian(ylim = c(-5, 0)) +
  scale_y_continuous(breaks = c(0, -1, round(deletion_fc_threshold, 2),
                                -2, -3, -4, -5),
                     minor_breaks = NULL) +
  scale_x_continuous(breaks = seq(0, 100, by = 10)) +
  theme_bw() +
  theme(legend.position = "blank") +
  labs(y = "Fold change", x = "Neoplastic cell content",
       colour = "") +
  geom_hline(yintercept = round(deletion_fc_threshold,2), linetype = "dashed") +
  annotate("text", x = 65, y = -4.5, label = "Homozyous \n deletion") +
  annotate("text", x = 90, y = -2.5, label = "Heterozygous \n deletion") +
  annotate("text", x = 90, y = -0.5, label = "Normal")

fold_change_plot

copy_number_df <- data.frame(ncc = seq(0, 100, by = 1)) |> 
  # Imagine for 100 cells
  mutate(copy_number_norm = 2,
         copy_number_het_del = ((ncc*1) + ((100-ncc)*2)) / 100,
         copy_number_hom_del = ((ncc*0) + ((100-ncc)*2)) / 100) |> 
  pivot_longer(cols = -ncc,
               names_to = "del_state",
               values_to = "copy_number")

copy_number_plot <- ggplot(copy_number_df, aes(x = ncc, y = copy_number)) +
  geom_line(aes(colour = del_state), linewidth = 1) +
  scale_colour_manual(values = c( "#999999", "#999999", "#999999")) +
  scale_x_continuous(breaks = seq(0, 100, by = 10)) +
  theme_bw() +
  theme(legend.position = "blank") +
  labs(y = "Copy number", x = "Neoplastic cell content",
       colour = "") +
  annotate("text", x = 75, y = 0.2, label = "Homozyous \n deletion") +
  annotate("text", x = 90, y = 0.8, label = "Heterozygous \n deletion") +
  annotate("text", x = 90, y = 1.8, label = "Normal") +
  geom_hline(yintercept = 1.5, linetype = "dashed") 

copy_number_plot

```

### Ploidy status

Ploidy status was predicted using the "Detect Regional Ploidy" tool. 

### Pipeline version

The version of the PanSolid CLC pipeline tested in this validation was PanSolid Workflow v2.4.

## Orthogonal testing

### Droplet digital PCR

20ng input was used.

ddPCR assays were designed for *CDKN2A*, *PTEN*, *MSH6* and *MLH1*.

*PTEN* has a pseudogene, *PTENP1*, on chromosome 9.

ddPCR primers were designed by targeting minor differences in the PTEN and PTENP1 sequences.

ddPCR assays already exist for *BRCA1*, *MSH2* and *PALB2*.

WS146462 and WS146463

### Whole genome sequencing

The Genomics England cancer pipeline estimates tumour content using the Ccube algorithm [@yuan2018].

### Loss of heterozgosity

```{r}
#| label: nf2-markers
#| include: FALSE

nf2_loh_markers <- tribble(
  ~marker,      ~chromosome, ~grch38_start,    ~grch38_end,
  "D22S275",    "22",        28718848,         28719015,
  "NF2CA3",     "22",        29628082,         29628219,
  "NF2intron10", "22",       29670415,         29670600,
  "D22S268",     "22",       30162212,         30162464
) |> 
  mutate(amplicon_size_bp = abs(grch38_start - grch38_end))

nf2_marker_mb <- round((max(nf2_loh_markers$grch38_end) - min(nf2_loh_markers$grch38_start)) / 10^6, 1)

target_df_with_coordinates <- extract_pansolid_cnv_coordinates(target_df, region)

nf2_loh_targets <- target_df_with_coordinates |> 
  filter(chromosome == "22") |> 
  filter(start >= min(nf2_loh_markers$grch38_start) &
           end <= max(nf2_loh_markers$grch38_end))

```

4 dinucleotide microsatellite repeat markers (D22S275, NF2CA3, NF2intron10 and D22S268) on chromosome 22 are used to assess loss of heterozygosity (LOH) for the *NF2* gene with fluorescence-PCR analysed on an ABI-3130 analyser ([LP 000 069: Neurofibromatosis type 2 (NF2): Standard Operating Procedure]{custom-style="Strong"}). Testing was performed on paired tumour and blood DNA.

These markers span `r nf2_marker_mb` Mb of chromosome 22, the same region contains `r nrow(nf2_loh_targets)` targets on PanSolid v2.

We used these samples as proof-of-concept that the PanSolid pipeline can identify regions of LOH.

```{r}
#| label: tbl-nf2-markers
#| echo: FALSE

kable(nf2_loh_markers)

```

{{< pagebreak >}}

# Results

```{r}
#| label: overall-results
#| include: FALSE


str(del_val_pansolid_ngs_collated)


```




## Comparison to ddPCR

ddPCR was performed for the *PTEN* and *CDKN2A* genes for all 25 normal control samples and 29 patient samples.

```{r}
#| label: load-ddpcr-data
#| include: FALSE

qs_normals <- read_csv(file = paste0(data_folder,
                                     "validation/DOC6283_amplifications/",
                                     "controls/qiasymphony_controls.csv"),
                       col_types = "c")

ps_results <- read_csv(file = paste0(data_folder,
                                     "validation/DOC6567_deletions/",
                                     "processed/",
                                     "pansolid_ngs_cnvs.csv"))

ddpcr_copy_number_threshold <- 1.5

pansolid_fold_change_threshold <- -1.33

```

```{r}
#| label: cdkn2a-results
#| include: FALSE

cdkn2a_ddpcr_results <- ddpcr_data |> 
  filter(worksheet == "WS146462") |> 
  filter(sample != "NTC") |> 
  filter(target_type == "Ch1Unknown") |> 
  mutate(category = case_when(
    sample %in% qs_normals$labno ~"normal control",
    TRUE ~"patient"
  )) |> 
  left_join(ps_results, join_by("sample" == "labno",
                                "")) |> 
  mutate(ddpcr_result = case_when(
    cnv < ddpcr_copy_number_threshold ~"deletion",
    cnv >= ddpcr_copy_number_threshold ~"normal"
  ),
  pansolid_result = case_when(
    cdkn2a_fold_change <= pansolid_fold_change_threshold ~"deletion",
    cdkn2a_fold_change > pansolid_fold_change_threshold ~"normal"),
  outcome = case_when(
    ddpcr_result == "deletion" & pansolid_result == "deletion" ~"PanSolid deletion; ddPCR deletion",
    ddpcr_result == "normal" & pansolid_result == "deletion" ~"PanSolid deletion; ddPCR normal",
    ddpcr_result == "normal" & pansolid_result == "normal" ~"PanSolid normal; ddPCR normal",
    ddpcr_result == "deletion" & pansolid_result == "normal" ~"PanSolid normal; ddPCR deletion"))

cdkn2a_patient_results <- cdkn2a_ddpcr_results |> 
  filter(category != "normal control") |> 
  filter(!is.na(outcome))

cdkn2a_result_summary <- cdkn2a_patient_results |> 
  count(outcome) |> 
  arrange(desc(n)) |> 
  rename(samples = n)

cdkn2a_metrics <- get_epir_metrics(outcome_vector = c(17, 0, 2, 10))

discrepant_strings <- c("PanSolid deletion; ddPCR normal", "PanSolid normal; ddPCR deletion")

discrepant_cdkn2a <- cdkn2a_ddpcr_results |> 
  filter(outcome %in% discrepant_strings) |> 
  select(sample, cnv, ch1_ch2_2, ch1_ch2_3, cdkn2a_fold_change, pansolid_result)

```


```{r}
#| label: pten-results
#| include: FALSE

pten_ddpcr_results <- ddpcr_data |>
  filter(worksheet == "WS146463") |> 
  filter(sample != "NTC") |> 
  filter(target_type == "Ch1Unknown") |> 
  mutate(category = case_when(
    sample %in% qs_normals$labno ~"normal control",
    TRUE ~"patient"
  )) |> 
  left_join(ps_results, join_by("sample" == "labno")) |> 
  mutate(ddpcr_result = case_when(
    cnv < ddpcr_copy_number_threshold ~"deletion",
    cnv >= ddpcr_copy_number_threshold ~"normal"
  ),
  pansolid_result = case_when(
    pten_fold_change <= pansolid_fold_change_threshold ~"deletion",
    pten_fold_change > pansolid_fold_change_threshold ~"normal"),
  outcome = case_when(
    ddpcr_result == "deletion" & pansolid_result == "deletion" ~"PanSolid deletion; ddPCR deletion",
    ddpcr_result == "normal" & pansolid_result == "deletion" ~"PanSolid deletion; ddPCR normal",
    ddpcr_result == "normal" & pansolid_result == "normal" ~"PanSolid normal; ddPCR normal",
    ddpcr_result == "deletion" & pansolid_result == "normal" ~"PanSolid normal; ddPCR deletion"))

pten_patient_results <- pten_ddpcr_results |> 
  filter(category != "normal control") |> 
  filter(!is.na(outcome))

pten_result_summary <- pten_patient_results |> 
  count(outcome) |> 
  arrange(desc(n)) |> 
  rename(samples = n)

pten_metrics <- get_epir_metrics(outcome_vector = c(8, 5, 2, 12))

discrepant_pten <- pten_ddpcr_results |> 
  filter(outcome %in% discrepant_strings) |> 
  select(sample, cnv, ch1_ch2_2, ch1_ch2_3, pten_fold_change, pansolid_result)

```

```{r}
#| label: fig-cdkn2a-ddpcr-results
#| echo: FALSE
#| fig-width: 6

cdkn2a_normal_plot <- cdkn2a_ddpcr_results |> 
  filter(category == "normal control") |> 
  ggplot(aes(x = reorder(sample, desc(cnv)), y = cnv)) +
  geom_errorbar(aes(ymin = poisson_cnv_min, ymax = poisson_cnv_max)) +
  geom_point(shape = 21, fill = "white") +
  theme_bw() +
  theme(axis.text.x = element_text(angle= 90),
        legend.position = "bottom") +
  labs(x = "", y = "ddPCR copy number",
       title = "CDKN2A normal control results") +
  ylim(0, 6) +
  geom_hline(yintercept = 1.5, linetype = "dashed")

cdkn2a_patient_plot <- cdkn2a_ddpcr_results |> 
  filter(category == "patient") |> 
  ggplot(aes(x = reorder(sample, desc(cnv)), y = cnv)) +
  geom_errorbar(aes(ymin = poisson_cnv_min, ymax = poisson_cnv_max)) +
  geom_point(shape = 21, fill = "white") +
  theme_bw() +
  theme(axis.text.x = element_text(angle= 90),
        legend.position = "bottom") +
  labs(x = "", y = "",
       title = "CDKN2A patient results") +
  ylim(0, 6) +
  geom_hline(yintercept = 1.5, linetype = "dashed")

cdkn2a_comb_plot <- cdkn2a_normal_plot + cdkn2a_patient_plot +
  plot_layout(nrow = 1)

cdkn2a_comb_plot

```

```{r}
#| label: fig-pten-ddpcr-results
#| echo: FALSE
#| fig-width: 6

pten_normal_plot <- pten_ddpcr_results |> 
  filter(category == "normal control") |> 
  ggplot(aes(x = reorder(sample, desc(cnv)), y = cnv)) +
  geom_errorbar(aes(ymin = poisson_cnv_min, ymax = poisson_cnv_max)) +
  geom_point(shape = 21, fill = "white") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom") +
  labs(x = "", y = "ddPCR copy number",
       title = "PTEN normal control results") +
  ylim(0, 5) +
  geom_hline(yintercept = 1.5, linetype = "dashed")

pten_patient_plot <- pten_ddpcr_results |> 
  filter(category == "patient") |> 
  ggplot(aes(x = reorder(sample, desc(cnv)), y = cnv)) +
  geom_errorbar(aes(ymin = poisson_cnv_min, ymax = poisson_cnv_max)) +
  geom_point(shape = 21, fill = "white") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom") +
  labs(x = "", y = "",
       title = "PTEN patient results") +
  ylim(0, 5) +
  geom_hline(yintercept = 1.5, linetype = "dashed")

pten_comb_plot <- pten_normal_plot + pten_patient_plot +
  plot_layout(nrow = 1)

pten_comb_plot

```

{{< pagebreak >}}

```{r}
#| label: tbl-cdkn2a-results
#| tbl-cap: "CDKN2A results"
#| echo: FALSE

kable(cdkn2a_result_summary)

```

```{r}
#| label: tbl-cdkn2a-metrics
#| tbl-cap: "CDKN2A metrics"
#| echo: FALSE

kable(cdkn2a_metrics)

```

{{< pagebreak >}}

```{r}
#| label: tbl-pten-results
#| tbl-cap: "PTEN results"
#| echo: FALSE

kable(pten_result_summary)

```

```{r}
#| label: tbl-pten-metrics
#| tbl-cap: "PTEN metrics"
#| echo: FALSE

kable(pten_metrics)

```

```{r}
#| label: fig-ddpcr-vs-pansolid
#| fig-height: 7
#| echo: FALSE

cdkn2a_ps_plot <- cdkn2a_ddpcr_results |> 
    filter(!is.na(cdkn2a_ddpcr_results$cdkn2a_fold_change)) |> 
  ggplot(aes(x = cnv, y = cdkn2a_fold_change)) +
  geom_hline(yintercept = pansolid_fold_change_threshold, linetype = "dashed") +
  geom_vline(xintercept = ddpcr_copy_number_threshold, linetype = "dashed") +
    annotate('rect', xmin = -1, xmax = 3, ymin = -1, 
           ymax = 1, fill='white') +
  geom_hline(yintercept = 1, colour = "grey") +
  geom_hline(yintercept = -1, colour = "grey") +
  geom_point(shape = 21) +
  theme_bw() +
  labs(x = "ddPCR copy number", y = "PanSolid fold change",
       title = "CDK2NA results") +
  scale_y_continuous(breaks = c(seq(-22, 2, by = 1))) +
  coord_cartesian(xlim = c(0, 2))

pten_ps_plot <- pten_ddpcr_results |> 
    filter(!is.na(pten_ddpcr_results$pten_fold_change)) |> 
  ggplot(aes(x = cnv, y = pten_fold_change)) +
  geom_hline(yintercept = pansolid_fold_change_threshold, linetype = "dashed") +
  geom_vline(xintercept = ddpcr_copy_number_threshold, linetype = "dashed") +
    annotate('rect', xmin = -1, xmax = 3, ymin = -1, 
           ymax = 1, fill='white') +
  geom_hline(yintercept = 1, colour = "grey") +
  geom_hline(yintercept = -1, colour = "grey") +
  geom_point(shape = 21) +
  theme_bw() +
  labs(x = "ddPCR copy number", y = "PanSolid fold change",
       title = "PTEN results") +
  scale_y_continuous(breaks = c(seq(-30, 2, by = 1))) +
  coord_cartesian(xlim = c(0, 2))

cdkn2a_ps_plot

pten_ps_plot

```

{{< pagebreak >}}

## Comparison to whole genome sequencing

We have the following true-positive samples from whole genome sequencing testing, which have already been tested by PanSolid NGS.

```{r}
#| label: wgs-deletions
#| include: FALSE

del_genes <- read_csv(file = paste0(data_folder,
                                   "validation/DOC6567_deletions/gene_lists/",
                                   "pansolid_deletion_gene_list.csv"))

wgs_cnvs_with_ids <- del_val_wgs_html_cnvs |> 
  left_join(del_val_wgs_html_ids, by = "filepath",
            relationship = "many-to-one")

pansolid_with_ids <- del_val_pansolid_ngs_collated |> 
  left_join(del_val_sample_patient_info |> 
              select(labno, firstname, surname, nhsno, pathno), by = "labno")

wgs_pansolid_nhs_nos <- intersect(wgs_cnvs_with_ids$nhsno,
                                  pansolid_with_ids$nhsno)

wgs_del_cnvs <- wgs_cnvs_with_ids |> 
  filter(cnv_class %in% c("LOSS", "DEL")) |> 
  filter(gene %in% del_genes$gene)

coarse_pansolid_vs_wgs <- pansolid_with_ids |> 
  filter(graining == "coarse" & nhsno %in% wgs_pansolid_nhs_nos) |> 
  full_join(wgs_del_cnvs, by = c("nhsno", "gene")) |> 
  select(labno.x, labno.y, firstname, surname, pathno, wgs_pathno,
         gene, cnv_region, fold_change_adjusted, cnv_class, cnv_copy_number)

fine_pansolid_vs_wgs <- pansolid_with_ids |> 
  filter(graining == "fine" & nhsno %in% wgs_pansolid_nhs_nos) |> 
  full_join(wgs_del_cnvs, by = c("nhsno", "gene")) |> 
  select(labno.x, labno.y, firstname, surname, pathno, wgs_pathno,
         gene, cnv_region, fold_change_adjusted, cnv_class, cnv_copy_number)


colnames(coarse_pansolid_vs_wgs)


```

```{r}
#| label: tbl-wgs-deletions
#| echo: FALSE

kable(wgs_del_cnvs_summary)

```

## Repeat testing

```{r}
#| label: repeat-schedule
#| include: FALSE

repeat_schedule <- tibble(
  "Worksheet" = c(1, 2, 2, 2, 3),
  "Sample replicate" = c(1, 2, 3, 4, 5),
  "Repeat category" = c("Inter-run", "Inter-run and intra-run", 
                        "Intra-run", "Intra-run", "Inter-run")
  )

```

Intra-run variation (repeatability) and inter-run variation (reproducibility) were investigated for 3 samples using the testing structure shown in @tbl-repeat-schedule. 

Sample 24017319 had a homozygous *CDKN2A* deletion and a heterozygous *PTEN* deletion, whilst sample 24020998 and sample 24027774 did not have deletions.

```{r}
#| label: tbl-repeat-schedule
#| tbl-cap: "Repeat testing"
#| echo: FALSE

kable(repeat_schedule)

```

```{r}

inter_run_replicates <- c(
  # 24017319
  "24017319_WS141734", "24017319a_WS144291", "24017319_WS144364",
  # 24027774
  "24027774_WS142076", "24027774a_WS144291", "24027774_WS144364",
  # 24020998
  "24020998_WS141045", "24020998a_WS144291", "24020998_WS144364")

intra_run_replicates <- c(
  # 24017319
  "24017319a_WS144291", "24017319b_WS144291", "24017319c_WS144291",
  # 24027774
  "24027774a_WS144291", "24027774b_WS144291", "24027774c_WS144291",
  # 24020998
  "24020998a_WS144291", "24020998b_WS144291", "24020998c_WS144291"
)

all_replicates <- c(inter_run_replicates, intra_run_replicates)

repeat_data <- del_val_pansolid_ngs_collated |> 
  mutate(labno_suffix_worksheet = paste0(labno, suffix, "_", worksheet)) |> 
  filter(labno_suffix_worksheet %in% all_replicates) |> 
  select(graining, labno, worksheet, labno_suffix_worksheet, gene, fold_change_adjusted) 

repeat_data |> 
  filter(labno == "24020998") |> 
  ggplot(aes(x = labno_suffix_worksheet, y = fold_change_adjusted)) +
  geom_col(aes(fill = gene), position = "dodge") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = "", y = "Fold Change") +
  facet_wrap(~graining)



```


### Uncertainty of measurement

The uncertainty of measurement will be greater for fold changes detected for deletions rather than amplifications because the two equations differ. The deletions equation is more sensitive to variation

*"The fact that the same percent-wise change in coverage (copy number) leads to a higher fold change for deletions than for amplifications means that given the same amplification and deletion fold change cutoff there is a higher risk of calling false positive deletions than amplifications - it takes less coverage fluctuation to pass the fold change cutoff for deletions."* [@qiagen2023]

## Limit of detection

The theoretical limit of detection for a heterozygous deletion is 50%, and for a homozygous deletion it is 25% (@sec-methods-fold-change).

{{< pagebreak >}}

# Discussion

# Review of test requirements

# Requirements for clinical implementation

{{< pagebreak >}}

# References

::: {#refs}
:::

# Supplementary Information