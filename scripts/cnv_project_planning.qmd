---
title: "PanSolid CNV Project Planning"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(readxl)
library(here)
library(epiR)

```

Here is the current plan for the different samples and variant types to be included in the project.

The idea is that the positive control samples for one variant type will be used as negative control samples for the other variant types.

```{r}
#| label: load-plan
#| echo: FALSE

variant_types <- read_excel(here("data/pansolid_cnv_variant_type_planning.xlsx")) 

total_samples <- sum(variant_types$positive_samples)

```

```{r}
#| label: show-plan-samples
#| echo: FALSE

variant_types_mod <- variant_types |> 
  mutate(negative_samples = total_samples - positive_samples) |> 
  select(-zygosity)

knitr::kable(variant_types_mod)

```

{{< pagebreak >}}

This is what the plan looks like in terms of the different variant categories.

```{r}
#| label: show-plan-categories
#| echo: FALSE

variant_categories <- variant_types |> 
  group_by(variant) |> 
  summarise(positive_samples = sum(positive_samples)) |> 
  mutate(negative_samples = total_samples - positive_samples)

knitr::kable(variant_categories)

```

```{r}
#| label: calculate-test-metrics
#| include: FALSE

get_calcs <- function(df, variant_type) {
  
  x <- df |> 
    filter(variant == variant_type)
  
  calcs <- epiR::epi.tests(c(as.numeric(x[,2]), 
                             0, 0, as.numeric(x[,3])),
                           method = "clopper-pearson")
  return(calcs)
  
}

```

If we assume that the results of the orthogonal method perfectly match the NGS PanSolid results (sensitivity and specificity = 100%), we can calculate the predicted test metrics for each variant type.

```{r}
#| label: amplifications
#| include: TRUE

get_calcs(variant_categories, "Amplification")

```

{{< pagebreak >}}

```{r}
#| label: deletions
#| include: TRUE

get_calcs(variant_categories, "Whole gene deletion")

```

{{< pagebreak >}}

```{r}
#| label: LOH
#| include: TRUE

get_calcs(variant_categories, "Copy neutral loss of heterozygosity")

```

{{< pagebreak >}}

```{r}
#| label: translocations
#| include: TRUE

get_calcs(variant_categories, "Translocation")

```
