---
title: "PanSolid CNV Project Planning"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(readxl)
library(here)
library(epiR)

```

Here is the current plan for the different samples and variant types to be included in the project.

The idea is that the positive control samples for one variant type will be used as negative control samples for the other variant types.

LOH: loss of heterozygosity

```{r}
#| label: load-plan
#| echo: FALSE

variant_types <- read_excel(here("data/pansolid_cnv_variant_type_planning.xlsx")) 

total_samples <- sum(variant_types$positive_samples)

```

```{r}
#| label: show-plan-samples
#| echo: FALSE

variant_types_mod <- variant_types |> 
  mutate(negative_samples = total_samples - positive_samples) |> 
  select(-zygosity)

knitr::kable(variant_types_mod)

```

{{< pagebreak >}}

This is what the plan looks like in terms of the different variant categories.

```{r}
#| label: show-plan-categories
#| echo: FALSE

variant_categories <- variant_types |> 
  group_by(variant) |> 
  summarise(positive_samples = sum(positive_samples)) |> 
  mutate(negative_samples = total_samples - positive_samples)

knitr::kable(variant_categories)

```

```{r}
#| label: calculate-test-metrics
#| include: FALSE

get_calcs <- function(df, variant_type) {
  
  x <- df |> 
    filter(variant == variant_type)
  
  calcs <- summary(epiR::epi.tests(c(as.numeric(x[,2]), 
                             0, 0, as.numeric(x[,3])),
                           method = "clopper-pearson")) |> 
    mutate(type = variant_type)
  
  return(calcs)
  
}

```

If we assume that the results of the orthogonal method perfectly match the NGS PanSolid results (sensitivity and specificity = 100%), we can calculate the predicted test metrics for each variant type with 95% confidence intervals.

```{r}
#| label: perform-calcs
#| echo: FALSE

amps <- get_calcs(variant_categories, "Amplification")

dels <- get_calcs(variant_categories, "Whole gene deletion")

loh <- get_calcs(variant_categories, "Copy neutral LOH")

translocations <- get_calcs(variant_categories, "Translocation")

all_calcs <- rbind(amps, dels, loh, translocations)

all_calcs |> 
  filter(statistic %in% c("se", "sp")) |> 
  mutate(metric = case_when(
    
    statistic == "se" ~ "Sensitivity",
    
    statistic == "sp" ~ "Specificity"
    
  )) |> 
  ggplot(aes(x = type, y = est)) +
  geom_point(pch = 21, size = 2) +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  facet_wrap(~metric) +
  labs(x = "", y = "Proportion", 
       title = "Predicted test metrics for each variant type",
       caption = "Assuming 100% concordance with orthogonal test") +
  ylim(0.5, 1)



```

{{< pagebreak >}}

```{r}
#| label: deletions
#| include: TRUE
  
  

```

{{< pagebreak >}}

```{r}
#| label: LOH
#| include: TRUE


```

{{< pagebreak >}}

```{r}
#| label: translocations
#| include: TRUE



```
